{
  "swagger": "2.0",
  "info": {
    "title": "MicrosoftGraphOpenApi",
    "version": "1.0.0"
  },
  "paths": {
    "/teams/{teamId}/schedule": {
      "get": {
        "summary": "Get Schedule",
        "description": "Retrieve the properties and relationships of a schedule object.",
        "operationId": "GetSchedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and a schedule object in the response body.",
            "schema": {
              "$ref": "#/definitions/ScheduleResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Create or Replace Schedule",
        "description": "Create or replace a schedule object.",
        "operationId": "CreateReplaceSchedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and a schedule object in the response body.",
            "schema": {
              "$ref": "#/definitions/ScheduleResponse"
            }
          },
          "204": {
            "description": "This method is supposed to return a 200 OK according to the documentation, however, it actually returns a 204 No Content"
          }
        }
      },
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/teams/{teamId}/schedule/schedulingGroups": {
      "get": {
        "summary": "List Scheduling Groups",
        "description": "Get the list of schedulingGroups in this schedule.",
        "operationId": "ListSchedulingGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and a collection of schedulingGroup objects in the response body.",
            "schema": {
              "$ref": "#/definitions/SchedulingGroupCollectionResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create Scheduling Group",
        "description": "Create a new schedulingGroup.",
        "operationId": "CreateSchedulingGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchedulingGroupRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "If successful, this method returns a 201 Created response code and a schedulingGroup object in the response body.",
            "schema": {
              "$ref": "#/definitions/SchedulingGroupResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/GraphErrorContainer"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/teams/{teamId}/schedule/schedulingGroups/{schedulingGroupId}": {
      "get": {
        "summary": "Get Scheduling Group",
        "description": "Retrieves the properties and relationships of a schedulingGroup by ID.",
        "operationId": "GetSchedulingGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and a schedulingGroup object in the response body.",
            "schema": {
              "$ref": "#/definitions/SchedulingGroupResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Replace Scheduling Group",
        "description": "Replace an existing schedulingGroup.",
        "operationId": "ReplaceSchedulingGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchedulingGroupResponse"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The etag for concurrency control",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and a schedulingGroup object in the response body.",
            "schema": {
              "$ref": "#/definitions/SchedulingGroupResponse"
            }
          },
          "204": {
            "description": "This method is supposed to return a 200 OK according to the documentation, however, it actually returns a 204 No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/GraphErrorContainer"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Scheduling Group",
        "description": "Mark a schedulingGroup as inactive by setting its isActive property. This method does not remove the schedulingGroup from the schedule. Existing shift instances assigned to the scheduling group remain part of the group.",
        "operationId": "DeleteSchedulingGroup",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "If successful, this method returns a 204 No Content response code. It does not return anything in the response body."
          }
        }
      },
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "schedulingGroupId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/teams/{teamId}/schedule/shifts": {
      "get": {
        "summary": "List Shifts",
        "description": "Get the list of shift instances in a schedule.",
        "operationId": "ListShifts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "ODATA filter parameter to limit the shifts returned.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of shifts to fetch (if not specified this defaults to 100) ",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and a collection of shift objects in the response body.",
            "schema": {
              "$ref": "#/definitions/ShiftCollectionResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create Shift",
        "description": "Create a new shift instance in a schedule.",
        "operationId": "CreateShift",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShiftRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "If successful, this method returns a 201 Created response code and a shift object in the response body.",
            "schema": {
              "$ref": "#/definitions/ShiftResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/GraphErrorContainer"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/teams/{teamId}/schedule/shifts/{shiftId}": {
      "get": {
        "summary": "Get Shift",
        "description": "etrieve the properties and relationships of a shift object by ID.",
        "operationId": "GetShift",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and a shift object in the response body.",
            "schema": {
              "$ref": "#/definitions/ShiftResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Replace Shift",
        "description": "Replace an existing shift.",
        "operationId": "ReplaceShift",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShiftResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and a shift object in the response body.",
            "schema": {
              "$ref": "#/definitions/ShiftResponse"
            }
          },
          "204": {
            "description": "According to the documentation, this method should return a 200 OK response code, however, we have observed it returning a 204 No Content instead."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/GraphErrorContainer"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Shift",
        "description": "Deletes a shift from the schedule.",
        "operationId": "DeleteShift",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This method is supposed to return a 204 No Content according to the website, however, it actually returns a 200 OK"
          },
          "204": {
            "description": "If successful, this method returns a 204 No Content response code. It does not return anything in the response body."
          }
        }
      },
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "shiftId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/{upn}": {
      "get": {
        "summary": "Get User",
        "description": "Retrieve the properties and relationships of user object.",
        "operationId": "GetUserByUpn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and user object in the response body.",
            "schema": {
              "$ref": "#/definitions/IdentityResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "upn",
          "in": "path",
          "description": "The user principle name e.g. user@appsource.onmicrosoft.com",
          "required": true,
          "type": "string"
        },
        {
          "name": "$select",
          "in": "query",
          "description": "To map the Get result to an IdentityResponse, this should be set to id,displayName",
          "type": "string"
        }
      ]
    },
    "/teams/{teamId}/schedule/share": {
      "post": {
        "summary": "Share Schedule",
        "description": "Shares a schedule time range with schedule members. Make the collections of shift and timeOff items in the specified time range of the schedule viewable by the specified team members, including employees and managers. Each shift and timeOff instance in a schedule supports a draft version and a shared version of the item. The draft version is viewable by only managers, and the shared version is viewable by employees and managers. For each shift and timeOff instance in the specified time range, the share action updates the shared version from the draft version, so that in addition to managers, employees can also view the most current information about the item. The notifyTeam parameter further specifies which employees can view the item.",
        "operationId": "ShareSchedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The documentation states this method will return a 204 No Content on success, however, we have observed that it returns a 200 OK instead"
          },
          "204": {
            "description": "If successful, this method returns a 204 No Content response code. It does not return anything in the response body."
          }
        }
      },
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/groups/{teamId}/members": {
      "get": {
        "summary": "Get Members",
        "description": "Get a list of the group's direct members. A group can have users, contacts, devices, service principals, and other groups as members. This operation is not transitive.",
        "operationId": "GetMembers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "If successful, this method returns a 200 OK response code and collection of identityResponse objects in the response body.",
            "schema": {
              "$ref": "#/definitions/MembersResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "$select",
          "in": "query",
          "description": "To map the Get result to an IdentityResponse, this should be set to id,displayName",
          "type": "string"
        },
        {
          "name": "$top",
          "in": "query",
          "description": "The number of users to return (max supported 999)",
          "type": "integer"
        }
      ]
    },
    "/groups/{teamId}": {
      "get": {
        "summary": "Get Team",
        "description": "Gets the team with the specified ID",
        "operationId": "GetTeam",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "To map to a TeamResponse object, this should be set to id,displayName,createdDateTime,deletedDateTime",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The team with the specified id",
            "schema": {
              "$ref": "#/definitions/TeamResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "ScheduleResponse": {
      "title": "Root Type for Schedule",
      "description": "A collection of schedulingGroup objects, shift objects, timeOffReason objects, and timeOff objects within a team.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "x-nullable": false
        },
        "timeZone": {
          "type": "string"
        },
        "provisionStatus": {
          "type": "string"
        },
        "provisionStatusCode": {
          "type": "string"
        }
      },
      "example": "{\n  \"id\": \"833fc4df-c88b-4398-992f-d8afcfe41df2\",\n  \"enabled\": true,\n  \"timeZone\": \"America/Chicago\",\n  \"provisionStatus\": \"Completed\",\n  \"provisionStatusCode\": null\n}"
    },
    "SchedulingGroupResponse": {
      "title": "Root Type for SchedulingGroup",
      "description": "A logical grouping of users in a schedule (usually by role).",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean",
          "x-nullable": false
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentitySetResponse",
          "properties": {
            "application": {
              "type": "object"
            },
            "device": {
              "type": "object"
            },
            "conversation": {
              "type": "object"
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "example": "{\n    \"id\": \"TAG_f914d037-00a3-4ba4-b712-ef178cbea263\",\n    \"createdDateTime\": \"2019-03-12T22:10:38.242Z\",\n    \"lastModifiedDateTime\": \"2019-03-12T22:10:38.242Z\",\n    \"displayName\": \"Cashiers\",\n    \"isActive\": true,\n    \"userIds\": [\n        \"c5d0c76b-80c4-481c-be50-923cd8d680a1\",\n        \"2a4296b3-a28a-44ba-bc66-0274b9b95851\"\n    ],\n    \"lastModifiedBy\": {\n        \"application\": null,\n        \"device\": null,\n        \"conversation\": null,\n        \"user\": {\n            \"id\": \"366c0b19-49b1-41b5-a03f-9f3887bd0ed8\",\n            \"displayName\": \"John Doe\"\n        }\n    }\n}"
    },
    "SchedulingGroupCollectionResponse": {
      "title": "Root Type for SchedulingGroupCollection",
      "description": "Collection of scheduling groups",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchedulingGroupResponse"
          }
        }
      },
      "example": "{\n    \"value\": [\n        {\n            \"id\": \"TAG_f914d037-00a3-4ba4-b712-ef178cbea263\",\n            \"createdDateTime\": \"2019-03-12T22:10:38.242Z\",\n            \"lastModifiedDateTime\": \"2019-03-12T22:10:38.242Z\",\n            \"displayName\": \"Cashiers\",\n            \"isActive\": true,\n            \"userIds\": [\n                \"c5d0c76b-80c4-481c-be50-923cd8d680a1\",\n                \"2a4296b3-a28a-44ba-bc66-0274b9b95851\"\n            ],\n            \"lastModifiedBy\": {\n                \"application\": null,\n                \"device\": null,\n                \"conversation\": null,\n                \"user\": {\n                    \"id\": \"366c0b19-49b1-41b5-a03f-9f3887bd0ed8\",\n                    \"displayName\": \"John Doe\"\n                }\n            }\n        }\n    ]\n}"
    },
    "SchedulingGroupRequest": {
      "title": "Root Type for SchedulingGroupRequest",
      "description": "The data required for creating/updating scheduling groups",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": "{\n    \"displayName\": \"Test Team\",\n    \"isActive\": true,\n    \"userIds\": [\n        \"87c34653-9653-4ea8-9265-edca7a8932c5\",\n        \"dd906b70-fd0d-4aee-9786-dcec064eb3d4\",\n        \"d1009c17-2ccb-44d4-a85a-9e25d61b5bc1\",\n        \"9a5c1414-9123-4815-8579-55d98f4e74e0\"\n    ]\n}"
    },
    "IdentityResponse": {
      "title": "Root Type for IdentityResponse",
      "description": "The root of the IdentityResponse type's schema.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "userPrincipalName": {
          "type": "string"
        }
      },
      "example": "{\n    \"displayName\": \"string\",\n    \"id\": \"string\"\n}"
    },
    "IdentitySetResponse": {
      "title": "Root Type for IdentitySetResponse",
      "description": "The root of the IdentitySetResponse type's schema.",
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/IdentityResponse",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "applicationInstance": {
          "$ref": "#/definitions/IdentityResponse",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "device": {
          "$ref": "#/definitions/IdentityResponse",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "encrypted": {
          "$ref": "#/definitions/IdentityResponse",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "guest": {
          "$ref": "#/definitions/IdentityResponse",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "phone": {
          "$ref": "#/definitions/IdentityResponse",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "user": {
          "$ref": "#/definitions/IdentityResponse",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        }
      },
      "example": {
        "application": {
          "displayName": "some text",
          "id": "some text"
        },
        "applicationInstance": {
          "displayName": "some text",
          "id": "some text"
        },
        "device": {
          "displayName": "some text",
          "id": "some text"
        },
        "encrypted": {
          "displayName": "some text",
          "id": "some text"
        },
        "guest": {
          "displayName": "some text",
          "id": "some text"
        },
        "phone": {
          "displayName": "some text",
          "id": "some text"
        },
        "user": {
          "displayName": "some text",
          "id": "some text"
        }
      }
    },
    "ShiftResponse": {
      "title": "Root Type for ShiftResponse",
      "description": "The root of the ShiftResponse type's schema.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "schedulingGroupId": {
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/IdentitySetResponse",
          "properties": {
            "application": {
              "type": "object"
            },
            "device": {
              "type": "object"
            },
            "conversation": {
              "type": "object"
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                }
              }
            }
          }
        },
        "sharedShift": {
          "$ref": "#/definitions/ShiftItem",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "notes": {
              "type": "string"
            },
            "startDateTime": {
              "format": "date-time",
              "type": "string"
            },
            "endDateTime": {
              "format": "date-time",
              "type": "string"
            },
            "theme": {
              "type": "string"
            },
            "activities": {
              "type": "array",
              "items": {}
            }
          }
        },
        "draftShift": {
          "$ref": "#/definitions/ShiftItem",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "notes": {
              "type": "string"
            },
            "startDateTime": {
              "format": "date-time",
              "type": "string"
            },
            "endDateTime": {
              "format": "date-time",
              "type": "string"
            },
            "theme": {
              "type": "string"
            },
            "activities": {
              "type": "array",
              "items": {}
            }
          }
        }
      },
      "example": "{\n    \"id\": \"SHFT_577b75d2-a927-48c0-a5d1-dc984894e7b8\",\n    \"createdDateTime\": \"2019-03-14T04:32:51.451Z\",\n    \"lastModifiedDateTime\": \"2019-03-14T05:32:51.451Z\",\n    \"userId\": \"c5d0c76b-80c4-481c-be50-923cd8d680a1\",\n    \"schedulingGroupId\": \"TAG_228940ed-ff84-4e25-b129-1b395cf78be0\",\n    \"lastModifiedBy\": {\n        \"application\": null,\n        \"device\": null,\n        \"conversation\": null,\n        \"user\": {\n            \"id\": \"366c0b19-49b1-41b5-a03f-9f3887bd0ed8\",\n            \"displayName\": \"John Doe\"\n        }\n    },\n    \"sharedShift\": {\n        \"displayName\": \"Day shift\",\n        \"notes\": \"Please do inventory as part of your shift.\",\n        \"startDateTime\": \"2019-03-11T15:00:00Z\",\n        \"endDateTime\": \"2019-03-12T00:00:00Z\",\n        \"theme\": \"blue\",\n        \"activities\": [\n            {\n                \"isPaid\": true,\n                \"startDateTime\": \"2019-03-11T15:00:00Z\",\n                \"endDateTime\": \"2019-03-11T15:15:00Z\",\n                \"code\": \"\",\n                \"displayName\": \"Lunch\"\n            }\n        ]\n    },\n    \"draftShift\": {\n        \"displayName\": \"Day shift\",\n        \"notes\": \"Please do inventory as part of your shift.\",\n        \"startDateTime\": \"2019-03-11T15:00:00Z\",\n        \"endDateTime\": \"2019-03-12T00:00:00Z\",\n        \"theme\": \"blue\",\n        \"activities\": [\n            {\n                \"isPaid\": true,\n                \"startDateTime\": \"2019-03-11T15:00:00Z\",\n                \"endDateTime\": \"2019-03-11T15:30:00Z\",\n                \"code\": \"\",\n                \"displayName\": \"Lunch\"\n            }\n        ]\n    }\n}"
    },
    "ShiftCollectionResponse": {
      "title": "Root Type for ShiftCollectionResponse",
      "description": "The root of the ShiftCollectionResponse type's schema.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShiftResponse"
          }
        }
      },
      "example": "{\n    \"value\": [\n        {\n            \"id\": \"SHFT_577b75d2-a927-48c0-a5d1-dc984894e7b8\",\n            \"createdDateTime\": \"2019-03-14T04:32:51.451Z\",\n            \"lastModifiedDateTime\": \"2019-03-14T05:32:51.451Z\",\n            \"userId\": \"c5d0c76b-80c4-481c-be50-923cd8d680a1\",\n            \"schedulingGroupId\": \"TAG_228940ed-ff84-4e25-b129-1b395cf78be0\",\n            \"lastModifiedBy\": {\n                \"application\": null,\n                \"device\": null,\n                \"conversation\": null,\n                \"user\": {\n                    \"id\": \"366c0b19-49b1-41b5-a03f-9f3887bd0ed8\",\n                    \"displayName\": \"John Doe\"\n                }\n            },\n            \"sharedShift\": {\n                \"displayName\": \"Day shift\",\n                \"notes\": \"Please do inventory as part of your shift.\",\n                \"startDateTime\": \"2019-03-11T15:00:00Z\",\n                \"endDateTime\": \"2019-03-12T00:00:00Z\",\n                \"theme\": \"blue\",\n                \"activities\": [\n                    {\n                        \"isPaid\": true,\n                        \"startDateTime\": \"2019-03-11T15:00:00Z\",\n                        \"endDateTime\": \"2019-03-11T15:15:00Z\",\n                        \"code\": \"\",\n                        \"displayName\": \"Lunch\"\n                    }\n                ]\n            },\n            \"draftShift\": {\n                \"displayName\": \"Day shift\",\n                \"notes\": \"Please do inventory as part of your shift.\",\n                \"startDateTime\": \"2019-03-11T15:00:00Z\",\n                \"endDateTime\": \"2019-03-12T00:00:00Z\",\n                \"theme\": \"blue\",\n                \"activities\": [\n                    {\n                        \"isPaid\": true,\n                        \"startDateTime\": \"2019-03-11T15:00:00Z\",\n                        \"endDateTime\": \"2019-03-11T15:30:00Z\",\n                        \"code\": \"\",\n                        \"displayName\": \"Lunch\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
    },
    "ShiftItem": {
      "title": "Root Type for ShiftItemResponse",
      "description": "The root of the ShiftItemResponse type's schema.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "startDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "theme": {
          "type": "string"
        },
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShiftActivity"
          }
        }
      },
      "example": "{\n    \"displayName\": \"Day shift\",\n    \"notes\": \"Please do inventory as part of your shift.\",\n    \"startDateTime\": \"2019-03-11T15:00:00Z\",\n    \"endDateTime\": \"2019-03-12T00:00:00Z\",\n    \"theme\": \"blue\",\n    \"activities\": [\n        {\n            \"isPaid\": true,\n            \"startDateTime\": \"2019-03-11T15:00:00Z\",\n            \"endDateTime\": \"2019-03-11T15:15:00Z\",\n            \"code\": \"\",\n            \"displayName\": \"Lunch\"\n        }\n    ]\n}"
    },
    "ShiftActivity": {
      "title": "Root Type for ShiftActivityResponse",
      "description": "The root of the ShiftActivityResponse type's schema.",
      "type": "object",
      "properties": {
        "isPaid": {
          "type": "boolean",
          "x-nullable": false
        },
        "startDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "theme": {
          "type": "string"
        }
      },
      "example": "{\n    \"isPaid\": true,\n    \"startDateTime\": \"2019-03-11T15:00:00Z\",\n    \"endDateTime\": \"2019-03-11T15:15:00Z\",\n    \"code\": \"\",\n    \"displayName\": \"Lunch\"\n}"
    },
    "ShiftRequest": {
      "title": "Root Type for ShiftRequest",
      "description": "The root of the ShiftRequest type's schema.",
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "schedulingGroupId": {
          "type": "string"
        },
        "sharedShift": {
          "$ref": "#/definitions/ShiftItem",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "notes": {
              "type": "string"
            },
            "startDateTime": {
              "format": "date-time",
              "type": "string"
            },
            "endDateTime": {
              "format": "date-time",
              "type": "string"
            },
            "theme": {
              "type": "string"
            },
            "activities": {
              "type": "array",
              "items": {}
            }
          }
        },
        "draftShift": {
          "$ref": "#/definitions/ShiftItem",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "notes": {
              "type": "string"
            },
            "startDateTime": {
              "format": "date-time",
              "type": "string"
            },
            "endDateTime": {
              "format": "date-time",
              "type": "string"
            },
            "theme": {
              "type": "string"
            },
            "activities": {
              "type": "array",
              "items": {}
            }
          }
        }
      },
      "example": {
        "userId": "c5d0c76b-80c4-481c-be50-923cd8d680a1",
        "schedulingGroupId": "TAG_228940ed-ff84-4e25-b129-1b395cf78be0",
        "sharedShift": {
          "displayName": "Day shift",
          "notes": "Please do inventory as part of your shift.",
          "startDateTime": "2019-03-11T15:00:00Z",
          "endDateTime": "2019-03-12T00:00:00Z",
          "theme": "blue",
          "activities": [
            {
              "isPaid": true,
              "startDateTime": "2019-03-11T15:00:00Z",
              "endDateTime": "2019-03-11T15:15:00Z",
              "code": "",
              "displayName": "Lunch"
            }
          ]
        },
        "draftShift": {
          "displayName": "Day shift",
          "notes": "Please do inventory as part of your shift.",
          "startDateTime": "2019-03-11T15:00:00Z",
          "endDateTime": "2019-03-12T00:00:00Z",
          "theme": "blue",
          "activities": [
            {
              "isPaid": true,
              "startDateTime": "2019-03-11T15:00:00Z",
              "endDateTime": "2019-03-11T15:30:00Z",
              "code": "",
              "displayName": "Lunch"
            }
          ]
        }
      }
    },
    "UserResponse": {
      "title": "Root Type for UserResponse",
      "description": "The root of the UserResponse type's schema.",
      "type": "object",
      "properties": {
        "accountEnabled": {
          "type": "boolean"
        },
        "ageGroup": {
          "type": "string"
        },
        "assignedLicenses": {
          "type": "array",
          "items": {}
        },
        "assignedPlans": {
          "type": "array",
          "items": {}
        },
        "birthday": {
          "type": "string"
        },
        "businessPhones": {
          "type": "array",
          "items": {}
        },
        "city": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "consentProvidedForMinor": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "deletedDateTime": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "externalUserState": {
          "type": "string"
        },
        "externalUserStateChangeDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "givenName": {
          "type": "string"
        },
        "hireDate": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "interests": {
          "type": "array",
          "items": {}
        },
        "isResourceAccount": {
          "type": "boolean"
        },
        "jobTitle": {
          "type": "string"
        },
        "legalAgeGroupClassification": {
          "type": "string"
        },
        "licenseAssignmentStates": {
          "type": "array",
          "items": {}
        },
        "mail": {
          "type": "string"
        },
        "mailboxSettings": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "mailNickname": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "mySite": {
          "type": "string"
        },
        "officeLocation": {
          "type": "string"
        },
        "onPremisesExtensionAttributes": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "onPremisesImmutableId": {
          "type": "string"
        },
        "onPremisesLastSyncDateTime": {
          "type": "string"
        },
        "onPremisesProvisioningErrors": {
          "type": "array",
          "items": {}
        },
        "onPremisesSecurityIdentifier": {
          "type": "string"
        },
        "onPremisesSyncEnabled": {
          "type": "boolean"
        },
        "passwordPolicies": {
          "type": "string"
        },
        "passwordProfile": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "pastProjects": {
          "type": "array",
          "items": {}
        },
        "postalCode": {
          "type": "string"
        },
        "preferredDataLocation": {
          "type": "string"
        },
        "preferredLanguage": {
          "type": "string"
        },
        "preferredName": {
          "type": "string"
        },
        "provisionedPlans": {
          "type": "array",
          "items": {}
        },
        "proxyAddresses": {
          "type": "array",
          "items": {}
        },
        "responsibilities": {
          "type": "array",
          "items": {}
        },
        "schools": {
          "type": "array",
          "items": {}
        },
        "skills": {
          "type": "array",
          "items": {}
        },
        "state": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "usageLocation": {
          "type": "string"
        },
        "userPrincipalName": {
          "type": "string"
        },
        "userType": {
          "type": "string"
        },
        "calendar": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "calendarGroups": {
          "type": "array",
          "items": {}
        },
        "calendarView": {
          "type": "array",
          "items": {}
        },
        "calendars": {
          "type": "array",
          "items": {}
        },
        "contacts": {
          "type": "array",
          "items": {}
        },
        "contactFolders": {
          "type": "array",
          "items": {}
        },
        "createdObjects": {
          "type": "array",
          "items": {}
        },
        "directReports": {
          "type": "array",
          "items": {}
        },
        "drive": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "insights": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "settings": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "events": {
          "type": "array",
          "items": {}
        },
        "extensions": {
          "type": "array",
          "items": {}
        },
        "inferenceClassification": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "mailFolders": {
          "type": "array",
          "items": {}
        },
        "manager": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "memberOf": {
          "type": "array",
          "items": {}
        },
        "joinedTeams": {
          "type": "array",
          "items": {}
        },
        "messages": {
          "type": "array",
          "items": {}
        },
        "outlook": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "ownedDevices": {
          "type": "array",
          "items": {}
        },
        "photo": {
          "type": "object",
          "properties": {
            "@odata.type": {
              "type": "string"
            }
          }
        },
        "registeredDevices": {
          "type": "array",
          "items": {}
        }
      },
      "example": "{\n    \"aboutMe\": \"string\",\n    \"accountEnabled\": true,\n    \"ageGroup\": \"string\",\n    \"assignedLicenses\": [\n        {\n            \"@odata.type\": \"microsoft.graph.assignedLicense\"\n        }\n    ],\n    \"assignedPlans\": [\n        {\n            \"@odata.type\": \"microsoft.graph.assignedPlan\"\n        }\n    ],\n    \"birthday\": \"String (timestamp)\",\n    \"businessPhones\": [\n        \"string\"\n    ],\n    \"city\": \"string\",\n    \"companyName\": \"string\",\n    \"consentProvidedForMinor\": \"string\",\n    \"country\": \"string\",\n    \"deletedDateTime\": \"String (timestamp)\",\n    \"department\": \"string\",\n    \"displayName\": \"string\",\n    \"externalUserState\": \"PendingAcceptance\",\n    \"externalUserStateChangeDateTime\": \"2018-11-12T01:13:13Z\",\n    \"givenName\": \"string\",\n    \"hireDate\": \"String (timestamp)\",\n    \"id\": \"string (identifier)\",\n    \"interests\": [\n        \"string\"\n    ],\n    \"isResourceAccount\": false,\n    \"jobTitle\": \"string\",\n    \"legalAgeGroupClassification\": \"string\",\n    \"licenseAssignmentStates\": [\n        {\n            \"@odata.type\": \"microsoft.graph.licenseAssignmentState\"\n        }\n    ],\n    \"mail\": \"string\",\n    \"mailboxSettings\": {\n        \"@odata.type\": \"microsoft.graph.mailboxSettings\"\n    },\n    \"mailNickname\": \"string\",\n    \"mobilePhone\": \"string\",\n    \"mySite\": \"string\",\n    \"officeLocation\": \"string\",\n    \"onPremisesExtensionAttributes\": {\n        \"@odata.type\": \"microsoft.graph.onPremisesExtensionAttributes\"\n    },\n    \"onPremisesImmutableId\": \"string\",\n    \"onPremisesLastSyncDateTime\": \"String (timestamp)\",\n    \"onPremisesProvisioningErrors\": [\n        {\n            \"@odata.type\": \"microsoft.graph.onPremisesProvisioningError\"\n        }\n    ],\n    \"onPremisesSecurityIdentifier\": \"string\",\n    \"onPremisesSyncEnabled\": true,\n    \"passwordPolicies\": \"string\",\n    \"passwordProfile\": {\n        \"@odata.type\": \"microsoft.graph.passwordProfile\"\n    },\n    \"pastProjects\": [\n        \"string\"\n    ],\n    \"postalCode\": \"string\",\n    \"preferredDataLocation\": \"string\",\n    \"preferredLanguage\": \"string\",\n    \"preferredName\": \"string\",\n    \"provisionedPlans\": [\n        {\n            \"@odata.type\": \"microsoft.graph.provisionedPlan\"\n        }\n    ],\n    \"proxyAddresses\": [\n        \"string\"\n    ],\n    \"responsibilities\": [\n        \"string\"\n    ],\n    \"schools\": [\n        \"string\"\n    ],\n    \"skills\": [\n        \"string\"\n    ],\n    \"state\": \"string\",\n    \"streetAddress\": \"string\",\n    \"surname\": \"string\",\n    \"usageLocation\": \"string\",\n    \"userPrincipalName\": \"string\",\n    \"userType\": \"string\",\n    \"calendar\": {\n        \"@odata.type\": \"microsoft.graph.calendar\"\n    },\n    \"calendarGroups\": [\n        {\n            \"@odata.type\": \"microsoft.graph.calendarGroup\"\n        }\n    ],\n    \"calendarView\": [\n        {\n            \"@odata.type\": \"microsoft.graph.event\"\n        }\n    ],\n    \"calendars\": [\n        {\n            \"@odata.type\": \"microsoft.graph.calendar\"\n        }\n    ],\n    \"contacts\": [\n        {\n            \"@odata.type\": \"microsoft.graph.contact\"\n        }\n    ],\n    \"contactFolders\": [\n        {\n            \"@odata.type\": \"microsoft.graph.contactFolder\"\n        }\n    ],\n    \"createdObjects\": [\n        {\n            \"@odata.type\": \"microsoft.graph.directoryObject\"\n        }\n    ],\n    \"directReports\": [\n        {\n            \"@odata.type\": \"microsoft.graph.directoryObject\"\n        }\n    ],\n    \"drive\": {\n        \"@odata.type\": \"microsoft.graph.drive\"\n    },\n    \"insights\": {\n        \"@odata.type\": \"microsoft.graph.officeGraphInsights\"\n    },\n    \"settings\": {\n        \"@odata.type\": \"microsoft.graph.userSettings\"\n    },\n    \"events\": [\n        {\n            \"@odata.type\": \"microsoft.graph.event\"\n        }\n    ],\n    \"extensions\": [\n        {\n            \"@odata.type\": \"microsoft.graph.extension\"\n        }\n    ],\n    \"inferenceClassification\": {\n        \"@odata.type\": \"microsoft.graph.inferenceClassification\"\n    },\n    \"mailFolders\": [\n        {\n            \"@odata.type\": \"microsoft.graph.mailFolder\"\n        }\n    ],\n    \"manager\": {\n        \"@odata.type\": \"microsoft.graph.directoryObject\"\n    },\n    \"memberOf\": [\n        {\n            \"@odata.type\": \"microsoft.graph.directoryObject\"\n        }\n    ],\n    \"joinedTeams\": [\n        {\n            \"@odata.type\": \"microsoft.graph.group\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"@odata.type\": \"microsoft.graph.message\"\n        }\n    ],\n    \"outlook\": {\n        \"@odata.type\": \"microsoft.graph.outlookUser\"\n    },\n    \"ownedDevices\": [\n        {\n            \"@odata.type\": \"microsoft.graph.directoryObject\"\n        }\n    ],\n    \"photo\": {\n        \"@odata.type\": \"microsoft.graph.profilePhoto\"\n    },\n    \"registeredDevices\": [\n        {\n            \"@odata.type\": \"microsoft.graph.directoryObject\"\n        }\n    ]\n}"
    },
    "ScheduleRequest": {
      "title": "Root Type for ScheduleRequest",
      "description": "The root of the ScheduleRequest type's schema.",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "x-nullable": false
        },
        "timeZone": {
          "type": "string"
        }
      },
      "example": "{\n    \"enabled\": true,\n    \"timeZone\": \"America/Chicago\"\n}"
    },
    "ShareRequest": {
      "title": "Root Type for ShareRequest",
      "description": "The root of the ShareRequest type's schema.",
      "type": "object",
      "properties": {
        "notifyTeam": {
          "type": "boolean"
        },
        "startDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "example": "{\n    \"notifyTeam\": true,\n    \"startDateTime\": \"2018-10-08T00:00:00.000Z\",\n    \"endDateTime\": \"2018-10-15T00:00:00.000Z\"\n}"
    },
    "MembersResponse": {
      "title": "Root Type for MembersResponse",
      "description": "The root of the MembersResponse type's schema.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityResponse"
          }
        }
      },
      "example": "{\n    \"value\": [\n        {\n            \"businessPhones\": [\n                \"businessPhones-value\"\n            ],\n            \"displayName\": \"displayName-value\",\n            \"givenName\": \"givenName-value\",\n            \"jobTitle\": \"jobTitle-value\",\n            \"mail\": \"mail-value\",\n            \"mobilePhone\": \"mobilePhone-value\",\n            \"officeLocation\": \"officeLocation-value\",\n            \"preferredLanguage\": \"preferredLanguage-value\",\n            \"surname\": \"surname-value\",\n            \"userPrincipalName\": \"userPrincipalName-value\",\n            \"id\": \"id-value\"\n        }\n    ]\n}"
    },
    "TeamResponse": {
      "title": "Root Type for TeamResponse",
      "description": "The details of a single team.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "deletedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      },
      "example": "{\n    \"id\": \"852dc91d-a9cd-4332-95c0-e18cb5a61229\",\n    \"deletedDateTime\": \"2019-05-01T10:27:56Z\",\n    \"createdDateTime\": \"2019-05-01T09:27:56Z\",\n    \"displayName\": \"Test Team\"\n}"
    },
    "GraphErrorContainer": {
      "title": "Root Type for ErrorContainer",
      "description": "The root of the ErrorContainer type's schema.",
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/GraphError",
          "properties": {
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "innerError": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "example": "{\n    \"error\": {\n        \"code\": \"invalidRange\",\n        \"message\": \"Uploaded fragment overlaps with existing data.\",\n        \"innerError\": {\n            \"requestId\": \"request-id\",\n            \"date\": \"date-time\"\n        }\n    }\n}"
    },
    "GraphError": {
      "title": "Root Type for Error",
      "description": "The root of the Error type's schema.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "innerError": {
          "$ref": "#/definitions/GraphInnerError",
          "properties": {
            "requestId": {
              "type": "string"
            },
            "date": {
              "type": "string"
            }
          }
        }
      },
      "example": "{\n    \"code\": \"invalidRange\",\n    \"message\": \"Uploaded fragment overlaps with existing data.\",\n    \"innerError\": {\n        \"requestId\": \"request-id\",\n        \"date\": \"date-time\"\n    }\n}"
    },
    "GraphInnerError": {
      "title": "Root Type for InnerError",
      "description": "The root of the InnerError type's schema.",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      },
      "example": "{\n    \"requestId\": \"request-id\",\n    \"date\": \"date-time\"\n}"
    }
  }
}