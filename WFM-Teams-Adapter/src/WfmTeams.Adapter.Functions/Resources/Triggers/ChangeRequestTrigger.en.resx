<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApproveSwapShifts" xml:space="preserve">
    <value>Shift Swap: Auto-Approved</value>
  </data>
  <data name="AvailabilityCycleBaseDateMustBeLessOrEqualStartDate" xml:space="preserve">
    <value>Rotation cycle start date cannot be later than availability start date.</value>
  </data>
  <data name="AvailabilityEndMustBeAfterStart" xml:space="preserve">
    <value>Availability end date must be after start date.</value>
  </data>
  <data name="AvailabilityNoChange" xml:space="preserve">
    <value>Cannot have same set of availability data.</value>
  </data>
  <data name="AvailabilityNumWeeksMustBeGreaterThanZero" xml:space="preserve">
    <value>Number of rotation week needs to be more than zero.</value>
  </data>
  <data name="AvailabilityPreferenceMustBeInGeneral" xml:space="preserve">
    <value>Preferred availability start and end time must be within general availability times.</value>
  </data>
  <data name="AvailabilityTimeRangesMustBeInFifteenMinIncrements" xml:space="preserve">
    <value>Availability time ranges should be in15 minute increments.</value>
  </data>
  <data name="AvailabilityUnknownErrorCode" xml:space="preserve">
    <value>Unknown WFM error code.</value>
  </data>
  <data name="AvailabilityWeekNumberGreaterThanCycleLength" xml:space="preserve">
    <value>Availability week number exceeds rotation cycle weeks.</value>
  </data>
  <data name="AvailabilityWeekNumberLessThanOne" xml:space="preserve">
    <value>Availability week number cannot be less than one.</value>
  </data>
  <data name="ChangeRequestNotFound" xml:space="preserve">
    <value>This request can't be found.</value>
  </data>
  <data name="EmployeeCannotWorkShift" xml:space="preserve">
    <value>You aren't able to request this swap.</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>An internal error prevented completion of this request.</value>
  </data>
  <data name="NoOpenShiftsFound" xml:space="preserve">
    <value>No open shifts were found to request.</value>
  </data>
  <data name="OriginalShiftDoesNotBelongToEmployee" xml:space="preserve">
    <value>This shift does not belong to you.</value>
  </data>
  <data name="OriginalShiftIsNotAValidShift" xml:space="preserve">
    <value>This shift cannot be swapped.</value>
  </data>
  <data name="OriginalShiftIsNotInAvailableSwapWindow" xml:space="preserve">
    <value>This shift is not in the available swap window.</value>
  </data>
  <data name="RecipientShiftNotFound" xml:space="preserve">
    <value>The shift you are swapping with can't be found.</value>
  </data>
  <data name="RequestedShiftStateInvalid" xml:space="preserve">
    <value>We couldn't process this request.</value>
  </data>
  <data name="RequestExpired" xml:space="preserve">
    <value>The request has timed out.</value>
  </data>
  <data name="RequestInProgress" xml:space="preserve">
    <value>Request in progress, please wait a few seconds and retry.</value>
  </data>
  <data name="SenderShiftNotFound" xml:space="preserve">
    <value>Your selected shift can't be found.</value>
  </data>
  <data name="ShiftNotAvailableToUser" xml:space="preserve">
    <value>You are not able to work this shift.</value>
  </data>
  <data name="SwapRequestNotFound" xml:space="preserve">
    <value>This request can't be found.</value>
  </data>
  <data name="UnexpectedError" xml:space="preserve">
    <value>We couldn't process this request.</value>
  </data>
  <data name="UnknownValue0" xml:space="preserve">
    <value>We couldn't process this request.</value>
  </data>
  <data name="UnknownValue1" xml:space="preserve">
    <value>We couldn't process this request.</value>
  </data>
  <data name="UnsupportedOperation" xml:space="preserve">
    <value>This change is not supported.</value>
  </data>
  <data name="UserCredentialsNotFound" xml:space="preserve">
    <value>We weren't able to log in to make this request.</value>
  </data>
  <data name="UserUnauthorized" xml:space="preserve">
    <value>You are not authorised to make this request.</value>
  </data>
</root>
