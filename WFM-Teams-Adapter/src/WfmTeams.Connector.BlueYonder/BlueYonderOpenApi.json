{
    "swagger": "2.0",
    "info": {
        "title": "BlueYonderOpenApi",
        "version": "1.0.0",
        "description": "All public Blue Yonder v2020.3 API's required for the Teams Shifts Integration",
        "contact": {

        }
    },
    "host": "www.jda.com",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/{employeeId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "employeeId",
                        "description": "The ID of the user to get",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the json for the specified user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "deprecated": false,
                "operationId": "GetUserById",
                "summary": "User",
                "description": "Gets the user with the specified ID"
            },
            "parameters": [
                {
                    "name": "employeeId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/jobs/{jobId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "jobId",
                        "description": "The ID of the job to get",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the json for the specified job",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                },
                "deprecated": false,
                "operationId": "GetJobById",
                "summary": "Job",
                "description": "Gets the job with the specified ID"
            },
            "parameters": [
                {
                    "name": "jobId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/departments/{departmentId}/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "departmentId",
                        "description": "The ID of the department to get",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the json for the specified department",
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                },
                "deprecated": false,
                "operationId": "GetDepartmentById",
                "summary": "Department",
                "description": "Gets the department with the specified ID"
            },
            "parameters": [
                {
                    "name": "departmentId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/sites/{siteId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns the json for the specfied site",
                        "schema": {
                            "$ref": "#/definitions/Site"
                        }
                    }
                },
                "operationId": "GetSiteById",
                "summary": "Site",
                "description": "Gets the site with the specified ID"
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The list of users",
                        "schema": {
                            "$ref": "#/definitions/UserCollection"
                        }
                    }
                },
                "operationId": "GetUsers",
                "summary": "Get Users",
                "description": "Retrieve a list of users using a list of the users internal IDs"
            },
            "parameters": [
                {
                    "name": "userIds",
                    "in": "query",
                    "required": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            ]
        },
        "/departments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns the list of departments for the site.",
                        "schema": {
                            "$ref": "#/definitions/DepartmentCollection"
                        },
                        "examples": {

                        }
                    }
                },
                "operationId": "ListDepartments",
                "summary": "List Departments",
                "description": "Retrieve all departments for a site using the site’s internal ID."
            },
            "parameters": [
                {
                    "name": "siteIdFilter",
                    "description": "The site's internal ID",
                    "in": "query",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/jobs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns the list of jobs.",
                        "schema": {
                            "$ref": "#/definitions/JobCollection"
                        }
                    }
                },
                "operationId": "ListJobs",
                "summary": "List Jobs",
                "description": "Retrieve all jobs for a site using the site’s internal ID."
            },
            "parameters": [
                {
                    "name": "siteIdFilter",
                    "description": "The internal ID of the site.",
                    "in": "query",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/clockEmployees/site/{siteId}/laborWeek": {
            "get": {
                "parameters": [
                    {
                        "name": "businessDate",
                        "description": "The date in format yyyy-mm-dd being any date within the labor week",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The collection of site employees for the given week",
                        "schema": {
                            "$ref": "#/definitions/SiteEmployees"
                        }
                    }
                },
                "operationId": "GetSiteEmployees",
                "summary": "Get Site Employees",
                "description": "Gets the assigned employees for the site for the specified labor week."
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/timeOffTypes/{timeOffTypeId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The time off type",
                        "schema": {
                            "$ref": "#/definitions/TimeOffType"
                        }
                    }
                },
                "operationId": "GetTimeOffType",
                "summary": "Get Time Off Type",
                "description": "Gets the detail for a time off type"
            },
            "parameters": [
                {
                    "name": "timeOffTypeId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/employeeAvailability": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The availability for the employee.",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAvailabilityCollectionResource"
                        }
                    }
                },
                "operationId": "GetEmployeeAvailability",
                "summary": "Get Employee Availability"
            },
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAvailabilityResource"
                        },
                        "in": "body",
                        "required": true
                    },
                    {
                        "name": "employeeId",
                        "description": "",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the created availability records",
                        "schema": {
                            "$ref": "#/definitions/EmployeeAvailabilityResource"
                        }
                    },
                    "409": {
                        "description": "Encountered a problem and returned an error message.",
                        "schema": {
                            "$ref": "#/definitions/AlternativeErrorResponse"
                        }
                    }
                },
                "operationId": "CreateEmployeeAvailability",
                "summary": "Create Employee Availability"
            },
            "parameters": [
                {
                    "name": "employeeId",
                    "description": "",
                    "in": "query",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/scheduledShifts/unfilled/site/{siteId}/laborweek/{calendarDateInLaborWeek}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Unfilled shifts collection.",
                        "schema": {
                            "$ref": "#/definitions/OpenShiftCollection"
                        }
                    }
                },
                "operationId": "GetUnfilledShifts",
                "summary": "Get Unfilled Shifts"
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                },
                {
                    "name": "calendarDateInLaborWeek",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/mySwapShifts": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ShiftSwapRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "409": {
                        "description": "Encountered a problem and returned an error message.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "201": {
                        "description": "A requested shift swap.",
                        "schema": {
                            "$ref": "#/definitions/ShiftSwapResponse"
                        },
                        "examples": {

                        }
                    }
                },
                "operationId": "CreateShiftSwapRequest",
                "summary": "Create Shift Swap Request"
            }
        },
        "/mySwapShifts/{swapRequestId}": {
            "put": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SwapShiftRequestResource"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns when the shift swap is successfully approved by the recipient and sets staus to 'Awaiting Manger Approval'.",
                        "schema": {
                            "$ref": "#/definitions/SwapShiftRequestResource"
                        }
                    },
                    "409": {
                        "description": "Encountered a problem and returned an error message.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "operationId": "RecipientApproveShiftSwap",
                "summary": "Recipient approves shift swap.",
                "description": "Allows the recipient of the given swap request to approve, setting the request status to 'Awaiting Manager Approval'."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Cancelled shift swap.",
                        "schema": {
                            "$ref": "#/definitions/ShiftSwapResponse"
                        }
                    },
                    "409": {
                        "description": "Encountered a problem and returned an error message.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "The requested shift swap does not exist.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "operationId": "CancelShiftSwap",
                "summary": "Cancel shift swap."
            },
            "parameters": [
                {
                    "name": "swapRequestId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/myAvailableShifts/{shiftId}/claim": {
            "put": {
                "parameters": [
                    {
                        "name": "shiftId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns when the open shift successfully claimed by user.",
                        "schema": {
                            "$ref": "#/definitions/RequestOpenShiftResponse"
                        }
                    },
                    "409": {
                        "description": "The open shift is already claimed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Shift Id was invalid.",
                        "schema": {
                            "$ref": "#/definitions/AlternativeErrorResponse"
                        }
                    }
                },
                "operationId": "RequestOpenShift",
                "summary": "Request Open Shift",
                "description": "Allow the requester to claim open shift."
            },
            "parameters": [
                {
                    "name": "shiftId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/scheduledShifts/{scheduledShiftId}/availableShift": {
            "put": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/AssignOpenShiftRequest"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Open shift assigned to the employee",
                        "schema": {
                            "$ref": "#/definitions/ScheduledShift"
                        }
                    },
                    "409": {
                        "description": "Encountered a problem and returned an error message.",
                        "schema": {
                            "$ref": "#/definitions/AlternativeErrorResponse"
                        }
                    }
                },
                "operationId": "AssignOpenShift",
                "summary": "Assign an open shift to an employee"
            },
            "parameters": [
                {
                    "name": "scheduledShiftId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/myAvailableShifts/{calendarDate}": {
            "get": {
                "parameters": [
                    {
                        "name": "calendarDate",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This will return my available open shifts.",
                        "schema": {
                            "$ref": "#/definitions/MyAvailableShiftsCollectionResource"
                        }
                    }
                },
                "operationId": "GetMyAvailableShiftsForWeek",
                "summary": "Get My Available Shifts For Week"
            },
            "parameters": [
                {
                    "name": "calendarDate",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/mySchedule/{shiftId}/availableSwapShifts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "This will get the available target shifts for the given scheduled shfit id.",
                        "schema": {
                            "$ref": "#/definitions/SwappableShiftCollectionResponse"
                        }
                    }
                },
                "operationId": "GetAvailableSwapShifts",
                "summary": "Provides eligible Shifts which can be swappable for the given scheduled shift Id"
            },
            "parameters": [
                {
                    "name": "shiftId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/{siteId}/pendingApprovals": {
            "get": {
                "responses": {
                    "200": {
                        "description": "List of all pending approvals for the site from the current date.",
                        "schema": {
                            "$ref": "#/definitions/PendingApprovals"
                        }
                    }
                },
                "operationId": "GetSiteApprovals",
                "summary": "Get the sites pending approvals.",
                "description": "List all of the various types of pending approvals for the given site from the current date."
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/{siteId}/pendingApprovals/swapShifts/{swapShiftId}/swappeeScheduledShifts/{swappeeScheduledShiftId}/approval": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Shift Swap was approved successfully.",
                        "schema": {
                            "$ref": "#/definitions/SwapShiftSummaryResource"
                        }
                    },
                    "409": {
                        "description": "An error occurred preventing the shift swap request from being approved.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "One or more of the shifts was invalid and not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "operationId": "ApproveShiftSwap",
                "summary": "Approve the given shift swap."
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "swapShiftId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "swappeeScheduledShiftId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/{siteId}/pendingApprovals/swapShifts/{swapShiftId}/swappeeScheduledShifts/{swappeeScheduledShiftId}/denial": {
            "put": {
                "responses": {
                    "200": {
                        "description": "The shift swap request was denied.",
                        "schema": {
                            "$ref": "#/definitions/SwapShiftSummaryResource"
                        }
                    },
                    "404": {
                        "description": "One or more of the shifts was invalid and not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "An error occured and the shift swap request was not denied.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "operationId": "DenyShiftSwap",
                "summary": "Deny the shift swap request."
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "swapShiftId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "swappeeScheduledShiftId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/myInfo": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The employee info",
                        "schema": {
                            "$ref": "#/definitions/EmployeeInfo"
                        }
                    }
                },
                "operationId": "GetMyInfo",
                "summary": "Get My Info",
                "description": "Gets the info for the logged in employee"
            }
        },
        "/{siteId}/siteInfo": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The site information",
                        "schema": {
                            "$ref": "#/definitions/SiteInfo"
                        }
                    },
                    "404": {
                        "description": "The details of the error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "operationId": "GetSiteInfo",
                "summary": "Get Site Info",
                "description": "Gets the site information"
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/scheduledShifts/site/{siteId}/laborWeek/{businessDate}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "description": "The ID of the site to get the scheduled shifts for.",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "exclusiveMaximum": false,
                        "exclusiveMinimum": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the json containing the scheduled shifts for the week",
                        "schema": {
                            "$ref": "#/definitions/WeekShifts"
                        }
                    }
                },
                "deprecated": false,
                "operationId": "GetSiteShiftsForWeek",
                "summary": "WeekShifts",
                "description": "Gets the full set of shifts for the specified site and week. If no businessDate is specified then the method returns the data for the current week."
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                },
                {
                    "name": "businessDate",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/scheduledShifts/employee/{employeeId}/laborWeek/{businessDate}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns the json containing the scheduled shifts for the week",
                        "schema": {
                            "$ref": "#/definitions/WeekShifts"
                        }
                    }
                },
                "operationId": "GetEmployeeShiftsForWeek",
                "summary": "Employee shifts for week",
                "description": "Gets the full set of shifts for the specified employee and week. If no businessDate is specified then the method returns the data for the current week."
            },
            "parameters": [
                {
                    "name": "employeeId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                },
                {
                    "name": "businessDate",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/sites": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The list of all sites.",
                        "schema": {
                            "$ref": "#/definitions/SiteCollectionResource"
                        }
                    }
                },
                "operationId": "ListSites",
                "summary": "Get All Sites",
                "description": "Gets the list of all sites."
            }
        },
        "/timeZones": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns the json for the specified time zone",
                        "schema": {
                            "$ref": "#/definitions/TimeZoneCollectionResource"
                        }
                    }
                },
                "operationId": "ListTimeZones",
                "summary": "Get All Time Zones",
                "description": "Get all the configured time zones"
            }
        },
        "/{siteId}/timeOffRequests/laborWeek/{dateinLaborWeek}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "All time off requests for a given labor week.",
                        "schema": {
                            "$ref": "#/definitions/EmployeeTimeOffCollectionResource"
                        }
                    }
                },
                "operationId": "GetTimeOffRequestsForWeek",
                "summary": "Get Time Off Requests For Week",
                "description": "Gets all the time off requests for the employees in the site for a labour week."
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "dateinLaborWeek",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/mySwapShifts/requestedByMe": {
            "get": {
                "responses": {
                    "200": {
                        "description": "My swap requests.",
                        "schema": {
                            "$ref": "#/definitions/SwapShiftRequestCollectionResource"
                        }
                    }
                },
                "operationId": "GetMyShiftSwapRequests",
                "summary": "Get My Shift Swap Requests",
                "description": "Gets all of the swap requests for this employee."
            }
        },
        "/{siteId}/pendingApprovals/swapShifts/{swapShiftId}/swappeeScheduledShifts/{swappeeScheduledShiftId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The summary resource for the shift swap.",
                        "schema": {
                            "$ref": "#/definitions/SwapShiftSummaryResource"
                        }
                    }
                },
                "operationId": "GetSwapShiftSummary",
                "summary": "Get swap shift summary",
                "description": "Get swap shift summary by internal id."
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "swapShiftId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "swappeeScheduledShiftId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/myShiftOffers/calendarDate/{calendarDate}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "List of all an employees shift offers for that day.",
                        "schema": {
                            "$ref": "#/definitions/ShiftOffersCollectionResource"
                        }
                    }
                },
                "operationId": "GetShiftOffers",
                "summary": "Get all shift offers for that user for a given date."
            },
            "parameters": [
                {
                    "name": "calendarDate",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/{siteId}/scheduling/employees/laborWeek/{containingBusinessDate}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The collection of site employees.",
                        "schema": {
                            "$ref": "#/definitions/SchedulingEmployeeCollectionResource"
                        }
                    }
                },
                "operationId": "ListSiteEmployees",
                "summary": "List Site Employees"
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "containingBusinessDate",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/timeOffRequests": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/TimeOffRequestResource"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "409": {
                        "description": "There was an error creating the time off request.",
                        "schema": {
                            "$ref": "#/definitions/AlternativeErrorResponse"
                        }
                    },
                    "201": {
                        "description": "The time off request was created successfully.",
                        "schema": {
                            "$ref": "#/definitions/TimeOffRequestResource"
                        }
                    }
                },
                "operationId": "CreateTimeOffRequest",
                "summary": "Create Time Off Request"
            },
            "parameters": [
                {
                    "name": "ignoreWarnings",
                    "description": "Comma separated list of warnings that should be ignored from the list RequestLongerThanClientSetting, BlackoutPeriodOverlap and AccrualBalanceViolation or * to ignore all three warnings.",
                    "in": "query",
                    "type": "string"
                }
            ]
        },
        "/timeOffTypes": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The specified time off type",
                        "schema": {
                            "$ref": "#/definitions/TimeOffType"
                        }
                    },
                    "404": {
                        "description": "A time off type with the specified name does not exist.",
                        "schema": {
                            "$ref": "#/definitions/AlternativeErrorResponse"
                        }
                    }
                },
                "operationId": "GetTimeOffTypeByName",
                "summary": "Get Time Off Type By Name"
            },
            "parameters": [
                {
                    "name": "name",
                    "description": "",
                    "in": "query",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/adjustmentCategory": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The collection of adjustment categories.",
                        "schema": {
                            "$ref": "#/definitions/AdjustmentCategoryCollectionResource"
                        }
                    }
                },
                "operationId": "ListAdjustmentCategories",
                "summary": "List Adjustment Categories",
                "description": "Gets the full list of adjustment categories that have been defined in Blue Yonder including time off reasons."
            }
        },
        "/timeOffRequests/{timeOffRequestId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The time off request.",
                        "schema": {
                            "$ref": "#/definitions/TimeOffRequestResource"
                        }
                    },
                    "409": {
                        "description": "Error getting time off request.",
                        "schema": {
                            "$ref": "#/definitions/AlternativeErrorResponse"
                        }
                    }
                },
                "operationId": "GetTimeOffRequest",
                "summary": "Get Time Off Request",
                "description": "Gets the time off request with the specified Id"
            },
            "put": {
                "parameters": [
                    {
                        "name": "ignoreWarnings",
                        "description": "Can specify which individual warnings out of (RequestLongerThanClientSetting, BlackoutPeriodOverlap and AccrualBalanceViolation) should be ignored (comma-separated list) or use all to specify all 3 warnings should be ignored.",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/TimeOffRequestResource"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The time off request was updated successfully",
                        "schema": {
                            "$ref": "#/definitions/TimeOffRequestResource"
                        }
                    },
                    "409": {
                        "description": "Failed to update the time off request.",
                        "schema": {
                            "$ref": "#/definitions/AlternativeErrorResponse"
                        }
                    }
                },
                "operationId": "UpdateTimeOffRequest",
                "summary": "Update Time Off Request",
                "description": "Updates the specified time off request."
            },
            "parameters": [
                {
                    "name": "timeOffRequestId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/scheduledShifts/employee/{employeeId}/businessDate/{businessDate}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns the scheduled shifts for that user and business date.",
                        "schema": {
                            "$ref": "#/definitions/EmployeeScheduledShiftCollectionResource"
                        }
                    }
                },
                "operationId": "GetEmployeeShiftsForBusinessDate",
                "summary": "Employee shifts for that business date.",
                "description": "Gets all of the employees shifts for the specified business date."
            },
            "parameters": [
                {
                    "name": "employeeId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                },
                {
                    "name": "businessDate",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/scheduledShifts/{scheduledShiftId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The specified scheduled shift.",
                        "schema": {
                            "$ref": "#/definitions/ScheduledShift"
                        }
                    }
                },
                "operationId": "GetScheduledShift",
                "summary": "Get Scheduled Shift"
            },
            "parameters": [
                {
                    "name": "scheduledShiftId",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/payPeriodConfigurations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The pay period configuration for that site and date.",
                        "schema": {
                            "$ref": "#/definitions/PayPeriodConfigurationResource"
                        }
                    },
                    "404": {
                        "description": "PayPeriodConfiguration not found for that site.",
                        "schema": {
                            "$ref": "#/definitions/AlternativeErrorResponse"
                        }
                    }
                },
                "operationId": "GetPayPeriodConfigurations",
                "summary": "Retrieves pay period configurations for that effective from date and site."
            },
            "parameters": [
                {
                    "name": "siteIdFilter",
                    "description": "",
                    "in": "query",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "effectiveDate",
                    "description": "",
                    "in": "query",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/timeOffRequests/employees/{employeeId}/years/{year}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The employee's time off requests.",
                        "schema": {
                            "$ref": "#/definitions/TimeOffRequestCollectionResource"
                        }
                    }
                },
                "operationId": "GetEmployeeTimeOffByYear",
                "summary": "Get Employee Time Off By Year",
                "description": "Get List of Time Off Requests for the given employee's internal Id in a specific year."
            },
            "parameters": [
                {
                    "name": "employeeId",
                    "description": "The employee’s internal Id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                },
                {
                    "name": "year",
                    "description": "Calender year",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int32"
                }
            ]
        },
        "/{siteId}/timeOffRequests/{timeOffRequestId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The employee time off request.",
                        "schema": {
                            "$ref": "#/definitions/EmployeeTimeOffResource"
                        }
                    }
                },
                "operationId": "GetTimeOffRequestById",
                "summary": "Get Time Off Request By Id",
                "description": "Gets the Time Off Request for the given timeOffRequestId."
            },
            "parameters": [
                {
                    "name": "siteId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "timeOffRequestId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/timeZones/{timeZoneId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns the json for the specified time zone.",
                        "schema": {
                            "$ref": "#/definitions/SiteTimeZone"
                        }
                    }
                },
                "operationId": "GetTimeZoneById",
                "summary": "Get Time Zone By Id",
                "description": "Get the timeZone with a specified ID."
            },
            "parameters": [
                {
                    "name": "timeZoneId",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "Department": {
            "title": "RootTypeforDepartment",
            "description": "Defines a department",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Job": {
            "title": "RootTypeforJob",
            "description": "Defines a job",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "displayCode": {
                    "type": "string"
                },
                "jobCode": {
                    "type": "string"
                },
                "departmentID": {
                    "format": "int32",
                    "type": "integer"
                },
                "jobId": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                }
            }
        },
        "ScheduledDetail": {
            "title": "RootTypeforScheduledDetail",
            "description": "Defines the detail of a schedule",
            "type": "object",
            "properties": {
                "detailTypeCode": {
                    "type": "string"
                },
                "startTime": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                },
                "endTime": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                }
            }
        },
        "ScheduledJob": {
            "title": "RootTypeforScheduledJob",
            "description": "Defines a scheduled job",
            "type": "object",
            "properties": {
                "startTime": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                },
                "endTime": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                },
                "jobId": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "scheduledDetail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledDetail"
                    }
                }
            }
        },
        "ScheduledShift": {
            "title": "RootTypeforScheduledShift",
            "description": "Defines a scheduled shift.",
            "type": "object",
            "properties": {
                "scheduledShiftId": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "employeeId": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "startTime": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                },
                "endTime": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                },
                "siteId": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "scheduledJobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledJob"
                    }
                }
            }
        },
        "WeekShifts": {
            "title": "RootTypeforWeekShifts",
            "description": "Defines the collection of scheduled shifts for a week",
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "startOfLaborWeek": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledShift"
                    }
                }
            }
        },
        "User": {
            "title": "RootTypeforUser",
            "description": "Defines a user",
            "required": [
                "name",
                "userId",
                "userSecurityGroupAssignmentCollection",
                "contactInfo"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/NameResource"
                },
                "userSecurityGroupAssignmentCollection": {
                    "$ref": "#/definitions/UserSecurityGroupCollection",
                    "description": ""
                },
                "userId": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "contactInfo": {
                    "$ref": "#/definitions/ContactInfoResource",
                    "description": ""
                }
            }
        },
        "Site": {
            "title": "Root Type for Site",
            "description": "Defines a site",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer",
                    "x-nullable": false
                },
                "name": {
                    "type": "string"
                },
                "longName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "openedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "timeZoneAssignmentID": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": "{\n    \"id\": 1000105,\n    \"name\": \"0002 - Bucktown\",\n    \"longName\": \"0002 - Bucktown\",\n    \"status\": \"Open\",\n    \"openedDate\": \"2016-01-04T00:00:00\",\n    \"timeZoneAssignmentID\": 1000101\n}"
        },
        "SiteEmployees": {
            "title": "Root Type for SiteEmployees",
            "description": "The root of the SiteEmployees type's schema.",
            "required": [
                "entities",
                "siteId",
                "startOfLaborWeek"
            ],
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "startOfLaborWeek": {
                    "format": "date-time",
                    "type": "string"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SiteEmployee"
                    }
                }
            },
            "example": "{\n    \"siteId\": 1000105,\n    \"startOfLaborWeek\": \"2019-05-26T00:00:00\",\n    \"clockEmployees\": [\n        {\n            \"employeeId\": 1000103,\n            \"firstName\": \"Tamara\",\n            \"lastName\": \"Grant\",\n            \"displayName\": \"tagra Grant\",\n            \"canWorkUnassignedJobs\": false,\n            \"isManager\": true\n        }\n    ]\n}"
        },
        "SiteEmployee": {
            "title": "Root Type for SiteEmployee",
            "description": "The root of the SiteEmployee type's schema.",
            "required": [
                "employeeId"
            ],
            "type": "object",
            "properties": {
                "employeeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "canWorkUnassignedJobs": {
                    "type": "boolean"
                },
                "isManager": {
                    "type": "boolean"
                }
            },
            "example": "{\n    \"employeeId\": 1000103,\n    \"firstName\": \"Tamara\",\n    \"lastName\": \"Grant\",\n    \"displayName\": \"tagra Grant\",\n    \"canWorkUnassignedJobs\": false,\n    \"isManager\": true\n}"
        },
        "TimeOffType": {
            "title": "Root Type for TimeOffType",
            "description": "",
            "required": [
                "id",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "example": {
                "id": 1000106,
                "name": "Holiday",
                "self": "timeOffTypes/1000106"
            }
        },
        "UserSecurityGroupCollection": {
            "title": "Root Type for UserSecurityGroupCollection",
            "description": "",
            "required": [
                "entities",
                "userId"
            ],
            "type": "object",
            "properties": {
                "userId": {
                    "format": "int32",
                    "type": "integer"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserSecurityGroupAssignment"
                    }
                }
            },
            "example": {
                "userId": 1000192,
                "entities": [
                ]
            }
        },
        "UserSecurityGroupAssignment": {
            "title": "Root Type for UserSecurityGroupAssignment",
            "description": "",
            "required": [
                "name",
                "securityGroupId",
                "userId"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "securityGroupId": {
                    "format": "int32",
                    "type": "integer"
                },
                "userId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": {
                "userId": 1000192,
                "securityGroupId": 202,
                "name": "Store Manager"
            }
        },
        "GeneralAvailability": {
            "title": "Root Type for GeneralAvailability",
            "description": "",
            "required": [
                "startTimeOffset",
                "endTimeOffset",
                "weekNumber",
                "dayOfWeek"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "startTimeOffset": {
                    "type": "string"
                },
                "endTimeOffset": {
                    "type": "string"
                },
                "dayOfWeek": {
                    "type": "string"
                },
                "weekNumber": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": {
                "id": 1001476,
                "startTimeOffset": "09:00:00",
                "endTimeOffset": "17:00:00",
                "dayOfWeek": "Monday",
                "weekNumber": 1
            }
        },
        "OpenShift": {
            "title": "Root Type for UnfilledShift",
            "description": "",
            "required": [
                "employeeId",
                "endTime",
                "startTime"
            ],
            "type": "object",
            "properties": {
                "scheduledShiftId": {
                    "format": "int32",
                    "type": "integer"
                },
                "employeeId": {
                    "type": "string"
                },
                "startTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "siteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "quantity": {
                    "format": "int32",
                    "type": "integer"
                },
                "scheduleTypeCode": {
                    "type": "string"
                },
                "scheduledJobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledJob"
                    }
                }
            },
            "example": {
                "scheduledShiftId": 1055695,
                "startTime": "2020-12-16T07:00:00",
                "endTime": "2020-12-16T16:00:00",
                "siteId": 1000105,
                "quantity": 1,
                "scheduleTypeCode": "Manual",
                "scheduledJobs": [
                    {
                        "startTime": "2020-12-16T07:00:00",
                        "endTime": "2020-12-16T16:00:00",
                        "jobId": 1000101,
                        "scheduledDetail": [
                        ],
                        "job": {
                            "rel": "job",
                            "method": "GET",
                            "uri": "/api/v1/jobs/1000101"
                        }
                    }
                ]
            }
        },
        "OpenShiftCollection": {
            "title": "Root Type for UnfilledShiftCollection",
            "description": "",
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "startOfLaborWeek": {
                    "format": "date-time",
                    "type": "string"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OpenShift"
                    }
                }
            },
            "example": {
                "siteId": 1000105,
                "startOfLaborWeek": "2020-12-14T00:00:00",
                "entities": [
                    {
                        "scheduledShiftId": 1055695,
                        "startTime": "2020-12-16T07:00:00",
                        "endTime": "2020-12-16T16:00:00",
                        "siteId": 1000105,
                        "quantity": 1,
                        "scheduleTypeCode": "Manual",
                        "scheduledJobs": [
                            {
                                "startTime": "2020-12-16T07:00:00",
                                "endTime": "2020-12-16T16:00:00",
                                "jobId": 1000101,
                                "scheduledDetail": [
                                ],
                                "job": {
                                    "rel": "job",
                                    "method": "GET",
                                    "uri": "/api/v1/jobs/1000101"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        "SiteTimeZone": {
            "title": "Root Type for SiteTimeZone",
            "description": "This data type is currently a complex object.",
            "required": [
                "id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "example": {
                "id": 1000102,
                "name": "WET",
                "self": "timeZones/1000102"
            }
        },
        "ShiftSwapRequest": {
            "title": "Root Type for ShiftSwapRequest",
            "description": "",
            "required": [
                "swapperScheduledShiftId",
                "requestedScheduledShiftIds"
            ],
            "type": "object",
            "properties": {
                "swapperScheduledShiftId": {
                    "format": "int32",
                    "type": "integer"
                },
                "requestedScheduledShiftIds": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "example": {
                "swapperScheduledShiftId": 1055711,
                "requestedScheduledShiftIds": [
                    1055712
                ]
            }
        },
        "ShiftSwapResponse": {
            "title": "Root Type for ShiftSwapResponse",
            "description": "",
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SwapShiftRequestResource"
                    }
                }
            },
            "example": {
                "entities": [
                    {
                        "swapRequestId": "some text",
                        "swapperScheduledShiftId": "some text",
                        "swappeeScheduledShiftId": "some text",
                        "swappeeName": "some text",
                        "swapperNetWeeklyHoursDelta": 72.19,
                        "startOfWeek": "some text",
                        "requestStatus": "some text",
                        "lostShift": {
                            "type": "some text",
                            "shiftId": "some text",
                            "shiftStart": "2018-02-10T09:30Z",
                            "shiftEnd": "2018-02-10T09:30Z",
                            "jobNames": "some text",
                            "jobColor": "some text",
                            "fixedShift": true
                        },
                        "gainedShift": {
                            "type": "some text",
                            "shiftId": "some text",
                            "shiftStart": "2018-02-10T09:30Z",
                            "shiftEnd": "2018-02-10T09:30Z",
                            "jobNames": "some text",
                            "jobColor": "some text",
                            "fixedShift": true
                        }
                    },
                    {
                        "swapRequestId": "some text",
                        "swapperScheduledShiftId": "some text",
                        "swappeeScheduledShiftId": "some text",
                        "swappeeName": "some text",
                        "swapperNetWeeklyHoursDelta": 14.6,
                        "startOfWeek": "some text",
                        "requestStatus": "some text",
                        "lostShift": {
                            "type": "some text",
                            "shiftId": "some text",
                            "shiftStart": "2018-02-10T09:30Z",
                            "shiftEnd": "2018-02-10T09:30Z",
                            "jobNames": "some text",
                            "jobColor": "some text",
                            "fixedShift": true
                        },
                        "gainedShift": {
                            "type": "some text",
                            "shiftId": "some text",
                            "shiftStart": "2018-02-10T09:30Z",
                            "shiftEnd": "2018-02-10T09:30Z",
                            "jobNames": "some text",
                            "jobColor": "some text",
                            "fixedShift": true
                        }
                    }
                ]
            }
        },
        "ErrorResponse": {
            "title": "Root Type for ErrorResponse",
            "description": "",
            "type": "object",
            "properties": {
                "responseId": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                }
            },
            "example": {
                "responseId": "9c6641d7-8c1a-4ef8-89db-822353552e87",
                "timestamp": "2020-12-21T14:07:30.4675777Z",
                "errors": [
                    {
                        "userMessage": "Shift has already been Taken",
                        "errorCode": "SwapShiftErrorCodes.ShiftHasBeenTaken",
                        "devMessage": "No error arguments available. "
                    }
                ]
            }
        },
        "AssignOpenShiftRequest": {
            "title": "Root Type for AssignOpenShiftRequest",
            "description": "",
            "required": [
                "employeeId"
            ],
            "type": "object",
            "properties": {
                "scheduledShiftId": {
                    "format": "int32",
                    "type": "integer"
                },
                "employeeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": {
                "scheduledShiftId": 1058475,
                "employeeId": 1006059
            }
        },
        "RequestOpenShiftResponse": {
            "title": "Root Type for ResquestOpenShiftResponse",
            "description": "",
            "type": "object",
            "properties": {
                "shiftId": {
                    "type": "string"
                },
                "start": {
                    "format": "date-time",
                    "type": "string"
                },
                "end": {
                    "format": "date-time",
                    "type": "string"
                },
                "jobNames": {
                    "type": "string"
                },
                "siteName": {
                    "type": "string"
                }
            },
            "example": {
                "shiftId": "1057102",
                "start": "2020-12-25T08:30:00",
                "end": "2020-12-25T17:00:00",
                "jobNames": "Checkout Operators",
                "siteName": "0002 - Bucktown"
            }
        },
        "MyAvailableShiftsCollectionResource": {
            "title": "Root Type for MyAvailableShiftsCollectionResource",
            "description": "",
            "type": "object",
            "properties": {
                "year": {
                    "format": "int32",
                    "type": "integer"
                },
                "month": {
                    "format": "int32",
                    "type": "integer"
                },
                "scheduleRestrictionPolicyName": {
                    "type": "string"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MyAvailableShiftResource"
                    }
                }
            },
            "example": "{\n    \"year\": 2021,\n    \"month\": 1,\n    \"scheduleRestrictionPolicyName\": \"EmployeeScheduleRestrictionPolicy\",\n    \"entities\": [],\n}"
        },
        "MyAvailableShiftResource": {
            "title": "Root Type for MyAvailableShiftResource",
            "description": "",
            "type": "object",
            "properties": {
                "shiftId": {
                    "type": "string"
                },
                "start": {
                    "format": "date-time",
                    "type": "string"
                },
                "end": {
                    "format": "date-time",
                    "type": "string"
                },
                "jobNames": {
                    "type": "string"
                },
                "siteName": {
                    "type": "string"
                }
            },
            "example": {
                "shiftId": "1058503",
                "start": "2021-01-02T09:00:00",
                "end": "2021-01-02T17:00:00",
                "jobNames": "Checkout Operators",
                "siteName": "0002 - Bucktown"
            }
        },
        "UserCollection": {
            "title": "Root Type for UserCollection",
            "description": "",
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "userIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "example": {
                "userIds": [
                    0,
                    1
                ],
                "entities": [
                    {
                        "userId": 1000196,
                        "name": {
                            "loginName": "blah.blah",
                            "firstName": "Blah",
                            "lastName": "Blah"
                        },
                        "userSecurityGroupAssignmentCollection": {
                            "userId": 1000196,
                            "entities": [
                                {
                                    "userId": 1000196,
                                    "securityGroupId": 201,
                                    "name": "Client Admin"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "SwappableShiftCollectionResponse": {
            "title": "Root Type for SwappableShiftCollectionResponse",
            "description": "Provides eligible Shifts which can be swappable for the given scheduled shift Id",
            "type": "object",
            "properties": {
                "swapperShiftId": {
                    "type": "string"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SwappableShiftResource"
                    }
                }
            },
            "example": {
                "swapperShiftId": "1059984",
                "entities": [
                ]
            }
        },
        "SwappableShiftResource": {
            "title": "Root Type for SwappableShiftResource",
            "description": "Swappable Shift Resource",
            "type": "object",
            "properties": {
                "employeeName": {
                    "type": "string"
                },
                "netHoursDelta": {
                    "format": "double",
                    "type": "number"
                },
                "shiftId": {
                    "type": "string"
                },
                "shiftStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "shiftEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "jobNames": {
                    "type": "string"
                },
                "jobColor": {
                    "type": "string"
                },
                "fixedShift": {
                    "type": "boolean"
                }
            },
            "example": {
                "employeeName": "Weight, Sonny",
                "netHoursDelta": -2.75,
                "shiftId": "1059985",
                "shiftStart": "2021-01-08T08:30:00",
                "shiftEnd": "2021-01-08T17:45:00",
                "jobNames": "Checkout Operators",
                "jobColor": "0xBDB76B",
                "fixedShift": false
            }
        },
        "PendingApprovals": {
            "title": "Root Type for PendingApprovals",
            "description": "",
            "type": "object",
            "properties": {
                "swapShiftApprovals": {
                    "$ref": "#/definitions/SwapShiftApprovalCollectionResource",
                    "description": ""
                }
            },
            "example": {
                "swapShiftApprovals": {
                    "entities": [
                    ]
                },
                "shiftPickupApprovals": {
                    "entities": [
                    ]
                },
                "avilabilityRequestApprovals": {
                    "entities": [
                    ]
                }
            }
        },
        "SwapShiftSummaryResource": {
            "title": "Root Type for ApproveShiftSwapResponse",
            "description": "",
            "type": "object",
            "properties": {
                "swapShiftId": {
                    "format": "int32",
                    "description": "The ID of the swap request.",
                    "type": "integer"
                },
                "swappeeScheduledShiftId": {
                    "format": "int32",
                    "description": "The ID of the swappee's shift involved in the swap.",
                    "type": "integer"
                },
                "requestedOn": {
                    "format": "date-time",
                    "description": "The date and time the swap shift request was created.",
                    "type": "string"
                },
                "requestedFor": {
                    "format": "date-time",
                    "description": "The date and time the swap was requested for.",
                    "type": "string"
                },
                "statusCode": {
                    "description": "The status of the swap request.",
                    "type": "string"
                },
                "requestor": {
                    "$ref": "#/definitions/SwappeeSwapperSummaryResource",
                    "description": "The requestor party to the swap request."
                },
                "swappee": {
                    "$ref": "#/definitions/SwappeeSwapperSummaryResource",
                    "description": "The swappee party to the swap request."
                }
            },
            "example": {
                "swapShiftId": 0,
                "swappeeScheduledShiftId": 1,
                "requestedOn": "0001-01-01T00:00:00",
                "requestedFor": "0001-01-01T00:00:00",
                "statusCode": "sample string 2",
                "requestor": {
                    "employeeId": 0,
                    "employeeName": {
                        "firstName": "sample string 0",
                        "lastName": "sample string 1",
                        "middleName": "sample string 2",
                        "nickName": "sample string 3"
                    },
                    "netWeeklyTotalHoursChange": 1,
                    "netWeeklyTotalHours": 2,
                    "schedule": [
                        {
                            "scheduledShiftId": 0,
                            "startsOn": "0001-01-01T00:00:00",
                            "endsOn": "0001-01-01T00:00:00",
                            "jobs": [
                                {
                                    "id": "sample string 0",
                                    "name": "sample string 1",
                                    "meta": {
                                        "self": "some url",
                                        "links": [
                                        ]
                                    }
                                },
                                {
                                    "id": "sample string 0",
                                    "name": "sample string 1",
                                    "meta": {
                                        "self": "some url",
                                        "links": [
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                "swappee": {
                    "employeeId": 0,
                    "employeeName": {
                        "firstName": "sample string 0",
                        "lastName": "sample string 1",
                        "middleName": "sample string 2",
                        "nickName": "sample string 3"
                    },
                    "netWeeklyTotalHoursChange": 1,
                    "netWeeklyTotalHours": 2,
                    "schedule": [
                        {
                            "scheduledShiftId": 0,
                            "startsOn": "0001-01-01T00:00:00",
                            "endsOn": "0001-01-01T00:00:00",
                            "jobs": [
                                {
                                    "id": "sample string 0",
                                    "name": "sample string 1",
                                    "meta": {
                                        "self": "some url",
                                        "links": [
                                        ]
                                    }
                                },
                                {
                                    "id": "sample string 0",
                                    "name": "sample string 1",
                                    "meta": {
                                        "self": "some url",
                                        "links": [
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "EmployeeInfo": {
            "title": "Root Type for EmployeeInfo",
            "description": "",
            "required": [
                "employeeId",
                "loginName"
            ],
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "loginName": {
                    "type": "string"
                },
                "badgeNumber": {
                    "type": "string"
                }
            },
            "example": {
                "employeeId": "1000197",
                "lastName": "Sinatra",
                "firstName": "Frank",
                "loginName": "frank.sinatra",
                "badgeNumber": "1000197"
            }
        },
        "SiteInfo": {
            "title": "Root Type for SiteInfo",
            "description": "",
            "required": [
                "siteId",
                "siteCode"
            ],
            "type": "object",
            "properties": {
                "siteId": {
                    "type": "string"
                },
                "siteCode": {
                    "type": "string"
                },
                "longName": {
                    "type": "string"
                },
                "startDayOfLaborWeek": {
                    "type": "string"
                },
                "effectiveStartOfWeek": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "example": {
                "siteId": "1000105",
                "siteCode": "0002 - Bucktown",
                "longName": "0002 - Bucktown",
                "startDayOfLaborWeek": "Monday",
                "effectiveStartOfWeek": "2021-01-04T00:00:00"
            }
        },
        "DepartmentCollection": {
            "title": "Root Type for DepartmentBySiteCollection",
            "description": "",
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Department"
                    }
                }
            },
            "example": {
                "siteId": 1000105,
                "entities": [
                    {
                        "id": 1000101,
                        "name": "Front End",
                        "actions": [
                            {
                                "rel": "add",
                                "method": "POST",
                                "uri": "/api/v1/departments"
                            }
                        ],
                        "self": "/api/v1/departments/1000101"
                    }
                ]
            }
        },
        "JobCollection": {
            "title": "Root Type for JobCollection",
            "description": "",
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "int32",
                    "type": "integer"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job"
                    }
                }
            },
            "example": {
                "siteId": 0,
                "entities": [
                    {
                        "jobId": 0,
                        "name": "sample string 1",
                        "displayCode": "sample string 2",
                        "jobCode": "sample string 3",
                        "departmentId": 4,
                        "department": {
                            "rel": "department",
                            "method": "GET",
                            "uri": "some url"
                        },
                        "actions": [
                            {
                                "rel": "edit",
                                "method": "PUT",
                                "uri": "some url"
                            },
                            {
                                "rel": "add",
                                "method": "POST",
                                "uri": "some url"
                            }
                        ],
                        "self": "some url"
                    }
                ]
            }
        },
        "SwapShiftRequestResource": {
            "title": "Root Type for SwapShiftRequestResource",
            "description": "",
            "type": "object",
            "properties": {
                "swapRequestId": {
                    "type": "string"
                },
                "swapperScheduledShiftId": {
                    "type": "string"
                },
                "swappeeScheduledShiftId": {
                    "type": "string"
                },
                "swappeeName": {
                    "type": "string"
                },
                "swapperNetWeeklyHoursDelta": {
                    "format": "double",
                    "type": "number"
                },
                "startOfWeek": {
                    "type": "string"
                },
                "requestStatus": {
                    "type": "string"
                },
                "lostShift": {
                    "$ref": "#/definitions/SwapShiftResource",
                    "description": "Shift which is getting lost because of this operation"
                },
                "gainedShift": {
                    "$ref": "#/definitions/SwapShiftResource",
                    "description": "Shift which is gained because of this swap"
                }
            },
            "example": {
                "swapRequestId": "some text",
                "swapperScheduledShiftId": "some text",
                "swappeeScheduledShiftId": "some text",
                "swappeeName": "some text",
                "swapperNetWeeklyHoursDelta": 85,
                "startOfWeek": "some text",
                "requestStatus": "some text",
                "lostShift": {
                    "type": "some text",
                    "shiftId": "some text",
                    "shiftStart": "2018-02-10T09:30Z",
                    "shiftEnd": "2018-02-10T09:30Z",
                    "jobNames": "some text",
                    "jobColor": "some text",
                    "fixedShift": true
                },
                "gainedShift": {
                    "type": "some text",
                    "shiftId": "some text",
                    "shiftStart": "2018-02-10T09:30Z",
                    "shiftEnd": "2018-02-10T09:30Z",
                    "jobNames": "some text",
                    "jobColor": "some text",
                    "fixedShift": true
                }
            }
        },
        "SwapShiftApprovalCollectionResource": {
            "title": "Root Type for SwapShiftApprovalResource",
            "description": "",
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SwapShiftApprovalResource"
                    }
                }
            },
            "example": {
                "entities": [
                    {
                        "swapShiftId": "sample string 0",
                        "swappeeScheduledShiftId": 1,
                        "requestedOn": "0001-01-01T00:00:00",
                        "requestedFor": "0001-01-01T00:00:00",
                        "statusCode": "sample string 2",
                        "requestor": {
                            "employeeId": 0,
                            "employeeName": {
                                "firstName": "sample string 0",
                                "lastName": "sample string 1",
                                "middleName": "sample string 2",
                                "nickName": "sample string 3"
                            }
                        },
                        "swappee": {
                            "employeeId": 0,
                            "employeeName": {
                                "firstName": "sample string 0",
                                "lastName": "sample string 1",
                                "middleName": "sample string 2",
                                "nickName": "sample string 3"
                            }
                        }
                    }
                ]
            }
        },
        "SwapShiftApprovalResource": {
            "title": "Root Type for SwapShiftApprovalResource",
            "description": "",
            "type": "object",
            "properties": {
                "swapShiftId": {
                    "type": "string"
                },
                "swappeeScheduledShiftId": {
                    "format": "int32",
                    "type": "integer"
                },
                "requestedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "requestedFor": {
                    "format": "date-time",
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                }
            },
            "example": {
                "swapShiftId": "sample string 0",
                "swappeeScheduledShiftId": 1,
                "requestedOn": "0001-01-01T00:00:00",
                "requestedFor": "0001-01-01T00:00:00",
                "statusCode": "sample string 2",
                "requestor": {
                    "employeeId": 0,
                    "employeeName": {
                        "firstName": "sample string 0",
                        "lastName": "sample string 1",
                        "middleName": "sample string 2",
                        "nickName": "sample string 3"
                    }
                }
            }
        },
        "TimeZoneCollectionResource": {
            "title": "Root Type for TimeZoneCollectionResource",
            "description": "",
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SiteTimeZone"
                    }
                }
            },
            "example": {
                "entities": [
                    {
                        "id": 1000101,
                        "name": "GMT"
                    },
                    {
                        "id": 1000102,
                        "name": "UK Time /WET"
                    },
                    {
                        "id": 1000103,
                        "name": "Eastern Time"
                    }
                ]
            }
        },
        "SiteCollectionResource": {
            "title": "Root Type for SiteCollectionResource",
            "description": "",
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Site"
                    }
                }
            },
            "example": {
                "entities": [
                    {
                        "id": 1000105,
                        "name": "0002 - Bucktown",
                        "longName": "0002 - Bucktown",
                        "status": "Open",
                        "openedDate": "2016-01-04T00:00:00",
                        "timeZoneAssignmentId": 1000101,
                        "operatingHoursSiteAssignments": [
                            {
                                "id": 1000101,
                                "siteId": 1000105,
                                "start": "2016-01-04T00:00:00",
                                "operatingHoursId": 1000101
                            },
                            {
                                "id": 1000117,
                                "siteId": 1000105,
                                "start": "2017-04-21T00:00:00",
                                "operatingHoursId": 1000102
                            }
                        ],
                        "mailingAddress": {
                            "id": 1000103,
                            "addressLine1": "1720 W North Avenue",
                            "addressLine2": "",
                            "city": "Chicago",
                            "state": "IL",
                            "countryCode": "US",
                            "zipCode": "60622",
                            "county": "",
                            "workPhone": "",
                            "faxNumber": "",
                            "email": "email@repl.com"
                        },
                        "parentOrganizationalUnitAssignmentId": 1000104
                    }
                ]
            }
        },
        "SwapShiftRequestCollectionResource": {
            "title": "Root Type for SwapShiftRequestCollectionResource",
            "description": "A collection of swap shift requests.",
            "required": [
                "entities"
            ],
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SwapShiftRequestResource"
                    }
                }
            },
            "example": {
                "entities": [
                    {
                        "swapRequestId": "sample string 0",
                        "swapperScheduledShiftId": "sample string 1",
                        "swappeeScheduledShiftId": "sample string 2",
                        "swappeeName": "sample string 3",
                        "swapperNetWeeklyHoursDelta": 4,
                        "startOfWeek": "sample string 5",
                        "requestStatus": "ManagerApproved",
                        "lostShift": {
                            "type": "n",
                            "shiftId": "sample string 0",
                            "shiftStart": "0001-01-01T00:00:00",
                            "shiftEnd": "0001-01-01T00:00:00",
                            "jobNames": "sample string 1",
                            "jobColor": "sample string 2",
                            "fixedShift": true
                        },
                        "gainedShift": {
                            "type": "n",
                            "shiftId": "sample string 0",
                            "shiftStart": "0001-01-01T00:00:00",
                            "shiftEnd": "0001-01-01T00:00:00",
                            "jobNames": "sample string 1",
                            "jobColor": "sample string 2",
                            "fixedShift": true
                        }
                    }
                ]
            }
        },
        "SwappeeSwapperSummaryResource": {
            "title": "Root Type for SwappeeSwapperSummaryResource",
            "description": "The summary resource for a party to a swap request.",
            "type": "object",
            "properties": {
                "employeeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "employeeName": {
                    "$ref": "#/definitions/EmployeeNameResource",
                    "properties": {
                        "firstName": {
                            "type": "string"
                        },
                        "lastName": {
                            "type": "string"
                        },
                        "middleName": {
                            "type": "string"
                        },
                        "nickName": {
                            "type": "string"
                        }
                    }
                },
                "netWeeklyTotalHoursChange": {
                    "format": "double",
                    "type": "number"
                },
                "netWeeklyTotalHours": {
                    "format": "double",
                    "type": "number"
                },
                "schedule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleResource"
                    }
                }
            },
            "example": {
                "employeeId": 0,
                "employeeName": {
                    "firstName": "sample string 0",
                    "lastName": "sample string 1",
                    "middleName": "sample string 2",
                    "nickName": "sample string 3"
                },
                "netWeeklyTotalHoursChange": 1,
                "netWeeklyTotalHours": 2,
                "schedule": [
                    {
                        "scheduledShiftId": 0,
                        "startsOn": "0001-01-01T00:00:00",
                        "endsOn": "0001-01-01T00:00:00",
                        "jobs": [
                            {
                                "id": "sample string 0",
                                "name": "sample string 1"
                            },
                            {
                                "id": "sample string 0",
                                "name": "sample string 1"
                            }
                        ],
                        "type": "Losing"
                    },
                    {
                        "scheduledShiftId": 0,
                        "startsOn": "0001-01-01T00:00:00",
                        "endsOn": "0001-01-01T00:00:00",
                        "jobs": [
                            {
                                "id": "sample string 0",
                                "name": "sample string 1"
                            },
                            {
                                "id": "sample string 0",
                                "name": "sample string 1"
                            }
                        ],
                        "type": "Losing"
                    }
                ]
            }
        },
        "ScheduleResource": {
            "title": "Root Type for ScheduleResource",
            "description": "",
            "type": "object",
            "properties": {
                "scheduledShiftId": {
                    "format": "int32",
                    "description": "The ID of the scheduled shift",
                    "type": "integer"
                },
                "startsOn": {
                    "format": "date-time",
                    "description": "The start date and time",
                    "type": "string"
                },
                "endsOn": {
                    "format": "date-time",
                    "description": "The end date and time",
                    "type": "string"
                },
                "jobs": {
                    "description": "The collection of jobs associated with the schedule resource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JobInfoResource"
                    }
                },
                "type": {
                    "description": "Allowed values: Losing, Gaining, Normal",
                    "type": "string"
                }
            },
            "example": {
                "scheduledShiftId": 0,
                "startsOn": "0001-01-01T00:00:00",
                "endsOn": "0001-01-01T00:00:00",
                "jobs": [
                    {
                        "id": "sample string 0",
                        "name": "sample string 1"
                    },
                    {
                        "id": "sample string 0",
                        "name": "sample string 1"
                    }
                ],
                "type": "Losing"
            }
        },
        "JobInfoResource": {
            "title": "Root Type for JobInfoResource",
            "description": "",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "example": {
                "id": "sample string 0",
                "name": "sample string 1"
            }
        },
        "EmployeeNameResource": {
            "title": "Root Type for EmployeeNameResource",
            "description": "",
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "nickName": {
                    "type": "string"
                }
            },
            "example": {
                "firstName": "sample string 0",
                "lastName": "sample string 1",
                "middleName": "sample string 2",
                "nickName": "sample string 3"
            }
        },
        "TimeOffAuditEntryResource": {
            "title": "Root Type for TimeOffAuditEntryResource",
            "description": "",
            "type": "object",
            "properties": {
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "authorLastName": {
                    "type": "string"
                },
                "authorFirstName": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                }
            },
            "example": {
                "timestamp": "2021-02-18T10:10:03",
                "comment": "A holiday is what I need.",
                "authorLastName": "Jim",
                "authorFirstName": "Beam",
                "statusCode": "Pending"
            }
        },
        "TimeOffRequestCollectionResource": {
            "description": "",
            "type": "object",
            "properties": {
                "entities": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeOffRequestResource"
                    }
                }
            }
        },
        "EmployeeTimeOffResource": {
            "title": "Root Type for TimeOffRequest",
            "description": "",
            "required": [
                "typeId"
            ],
            "type": "object",
            "properties": {
                "timeOffRequestId": {
                    "format": "int32",
                    "type": "integer"
                },
                "employeeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "siteId": {
                    "type": "string"
                },
                "start": {
                    "format": "date-time",
                    "type": "string"
                },
                "end": {
                    "format": "date-time",
                    "type": "string"
                },
                "typeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "typeName": {
                    "type": "string"
                },
                "paidHours": {
                    "format": "double",
                    "type": "number"
                },
                "statusCode": {
                    "type": "string"
                },
                "timeOffDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeOffDetailEntryResource"
                    }
                },
                "comment": {
                    "description": "",
                    "type": "string"
                },
                "timeOffAudits": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeOffAuditEntryResource"
                    }
                },
                "employeeName": {
                    "$ref": "#/definitions/EmployeeNameResource",
                    "description": ""
                },
                "halfDay": {
                    "description": "",
                    "type": "boolean"
                }
            },
            "example": {
                "timeOffRequestId": 0,
                "employeeId": 1,
                "siteId": "sample string 12",
                "start": "0001-01-01T00:00:00",
                "end": "0001-01-01T00:00:00",
                "typeId": 0,
                "typeName": "sample string 4",
                "paidHours": 0,
                "statusCode": "Approved",
                "timeOffDetails": [
                    {
                        "timeOffRequestDetailId": 0,
                        "date": "0001-01-01T00:00:00",
                        "payAdjustmentId": 0,
                        "payRuleId": 0,
                        "categoryDefinitionId": 0,
                        "paidHours": 0
                    },
                    {
                        "timeOffRequestDetailId": 0,
                        "date": "0001-01-01T00:00:00",
                        "payAdjustmentId": 0,
                        "payRuleId": 0,
                        "categoryDefinitionId": 0,
                        "paidHours": 0
                    }
                ]
            }
        },
        "TimeOffDetailEntryResource": {
            "title": "Root Type for TimeOffRequestDetail",
            "description": "",
            "type": "object",
            "properties": {
                "timeOffRequestDetailId": {
                    "format": "int32",
                    "type": "integer"
                },
                "date": {
                    "format": "date-time",
                    "type": "string"
                },
                "payAdjustmentId": {
                    "format": "int32",
                    "type": "integer"
                },
                "payRuleId": {
                    "format": "int32",
                    "type": "integer"
                },
                "categoryDefinitionId": {
                    "format": "int32",
                    "type": "integer"
                },
                "paidHours": {
                    "format": "double",
                    "type": "number"
                }
            },
            "example": {
                "timeOffRequestDetailId": 0,
                "date": "0001-01-01T00:00:00",
                "payAdjustmentId": 0,
                "payRuleId": 0,
                "categoryDefinitionId": 0,
                "paidHours": 0
            }
        },
        "ShiftOffersCollectionResource": {
            "title": "Root Type for ShiftOfferCollection",
            "description": "",
            "type": "object",
            "properties": {
                "calendarDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ShiftOfferResource"
                    }
                }
            },
            "example": {
                "calendarDate": "0001-01-01T00:00:00",
                "entities": [
                ]
            }
        },
        "ShiftOfferResource": {
            "title": "Root Type for ShiftOffer",
            "description": "",
            "type": "object",
            "properties": {
                "shiftId": {
                    "type": "string"
                },
                "isShiftOffered": {
                    "type": "boolean"
                },
                "siteName": {
                    "type": "string"
                },
                "jobName": {
                    "type": "string"
                },
                "shiftStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "shiftEnd": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "example": {
                "shiftId": "sample string 0",
                "isShiftOffered": true,
                "siteName": "sample string 2",
                "jobName": "sample string 3",
                "shiftStart": "0001-01-01T00:00:00",
                "shiftEnd": "0001-01-01T00:00:00"
            }
        },
        "EmployeeAvailabilityCollectionResource": {
            "title": "Root Type for EmployeeAvailabilityResponse",
            "description": "",
            "required": [
                "employeeId"
            ],
            "type": "object",
            "properties": {
                "entities": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmployeeAvailabilityResource"
                    }
                },
                "employeeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": {
                "employeeID": 1000192,
                "entities": [
                ]
            }
        },
        "EmployeeAvailabilityResource": {
            "title": "Root Type for EmployeeAvailability",
            "description": "",
            "required": [
                "generalAvailability",
                "cycleBaseDate",
                "effectiveFrom",
                "employeeId",
                "numberOfWeeks"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "effectiveFrom": {
                    "format": "date-time",
                    "type": "string"
                },
                "endsAfter": {
                    "format": "date-time",
                    "type": "string"
                },
                "numberOfWeeks": {
                    "format": "int32",
                    "type": "integer"
                },
                "cycleBaseDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "generalAvailability": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeneralAvailability"
                    }
                },
                "preferredAvailability": {
                    "type": "array",
                    "items": {

                    }
                },
                "fixedShifts": {
                    "type": "array",
                    "items": {

                    }
                },
                "employeeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "example": {
                "id": 1000291,
                "employeeID": 1000192,
                "effectiveFrom": "2019-09-24T00:00:00",
                "endsAfter": "2019-10-10T00:00:00",
                "numberOfWeeks": 1,
                "cycleBaseDate": "2019-09-19T00:00:00",
                "generalAvailability": [
                ],
                "preferredAvailability": [
                ],
                "fixedShifts": [
                ]
            }
        },
        "SchedulingEmployeeCollectionResource": {
            "title": "Root Type for SchedulingEmployeeCollectionResource",
            "description": "",
            "type": "object",
            "properties": {
                "siteId": {
                    "type": "string"
                },
                "startOfLaborWeek": {
                    "format": "date-time",
                    "type": "string"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SchedulingEmployeeResource"
                    }
                }
            },
            "example": {
                "siteId": "sample string 0",
                "startOfLaborWeek": "0001-01-01T00:00:00",
                "entities": [
                    {
                        "dateEffectiveSummary": {
                            "isMinor": true,
                            "isBorrowed": true,
                            "isScheduled": true
                        },
                        "id": "sample string 0",
                        "badgeNumber": "sample string 1",
                        "firstName": "sample string 3",
                        "lastName": "sample string 4",
                        "middleName": "sample string 5",
                        "displayName": "sample string 7"
                    }
                ]
            }
        },
        "SchedulingEmployeeResource": {
            "title": "Root Type for SchedulingEmployeeResource",
            "description": "",
            "required": [
                "badgeNumber",
                "firstName",
                "lastName"
            ],
            "type": "object",
            "properties": {
                "dateEffectiveSummary": {
                    "$ref": "#/definitions/EmployeeDateEffectiveSummary",
                    "properties": {
                        "isMinor": {
                            "type": "boolean"
                        },
                        "isBorrowed": {
                            "type": "boolean"
                        },
                        "isScheduled": {
                            "type": "boolean"
                        }
                    }
                },
                "id": {
                    "type": "string"
                },
                "badgeNumber": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            },
            "example": {
                "dateEffectiveSummary": {
                    "isMinor": true,
                    "isBorrowed": true,
                    "isScheduled": true
                },
                "id": "sample string 0",
                "badgeNumber": "sample string 1",
                "firstName": "sample string 3",
                "lastName": "sample string 4",
                "middleName": "sample string 5",
                "displayName": "sample string 7"
            }
        },
        "EmployeeDateEffectiveSummary": {
            "title": "Root Type for EmployeeDateEffectiveSummary",
            "description": "",
            "type": "object",
            "properties": {
                "isMinor": {
                    "type": "boolean"
                },
                "isBorrowed": {
                    "type": "boolean"
                },
                "isScheduled": {
                    "type": "boolean"
                }
            },
            "example": {
                "isMinor": true,
                "isBorrowed": true,
                "isScheduled": true
            }
        },
        "AlternativeErrorResponse": {
            "title": "Root Type for AlternativeErrorResponse",
            "description": "",
            "type": "object",
            "properties": {
                "errorInstanceId": {
                    "type": "string"
                },
                "userMessage": {
                    "type": "string"
                },
                "errorCode": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "moreInfo": {
                    "type": "string"
                },
                "devMessage": {
                    "description": ""
                }
            },
            "example": {
                "errorInstanceId": "some text",
                "userMessage": "some text",
                "devMessage": {

                },
                "errorCode": "some text",
                "timestamp": "some text",
                "moreInfo": "some text"
            }
        },
        "TimeOffRequestResource": {
            "title": "Root Type for TimeOffRequestResource",
            "description": "",
            "required": [
                "status",
                "start",
                "end",
                "timeOffTypeId",
                "employeeId"
            ],
            "type": "object",
            "properties": {
                "timeOffRequestId": {
                    "format": "int32",
                    "description": "The system generated time off request's internal Id",
                    "type": "integer"
                },
                "timeOffTypeId": {
                    "format": "int32",
                    "description": "The time off type's internal Id",
                    "type": "integer"
                },
                "employeeId": {
                    "format": "int32",
                    "description": "The employee's internal Id",
                    "type": "integer"
                },
                "status": {
                    "description": "The time off request's status. Allowed values: Pending, Approved, Denied, Cancelled",
                    "type": "string"
                },
                "start": {
                    "format": "date-time",
                    "description": "The time off request's effective start time",
                    "type": "string"
                },
                "end": {
                    "format": "date-time",
                    "description": "The time off request's effective end time",
                    "type": "string"
                },
                "details": {
                    "description": "List of TimeOffRequestDetailResource",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeOffRequestDetailResource"
                    }
                },
                "comments": {
                    "description": "The time off request's comments",
                    "type": "string"
                },
                "hoursRequested": {
                    "format": "double",
                    "description": "The sum of the detail's hours.",
                    "type": "number"
                }
            },
            "example": {
                "timeOffRequestId": 0,
                "timeOffTypeId": 0,
                "employeeId": 0,
                "status": "Pending",
                "start": "0001-01-01T00:00:00",
                "end": "0001-01-01T00:00:00",
                "details": [
                    {
                        "timeOffRequestDetailId": 0,
                        "timeOffTypeId": 0,
                        "date": "0001-01-01T00:00:00",
                        "hours": 0,
                        "payCategoryId": 0
                    },
                    {
                        "timeOffRequestDetailId": 0,
                        "timeOffTypeId": 0,
                        "date": "0001-01-01T00:00:00",
                        "hours": 0,
                        "payCategoryId": 0
                    }
                ],
                "comments": "sample string 1",
                "hoursRequested": 0,
                "closePayPeriodInformation": {
                    "backPayMappings": [
                        {
                            "payAdjustmentId": 0,
                            "categoryDefinitionId": 0,
                            "backPayAdjustmentCategoryId": 0,
                            "backPayCategoryDefinationId": 0
                        },
                        {
                            "payAdjustmentId": 0,
                            "categoryDefinitionId": 0,
                            "backPayAdjustmentCategoryId": 0,
                            "backPayCategoryDefinationId": 0
                        }
                    ],
                    "auditReasonId": 0
                }
            }
        },
        "TimeOffRequestDetailResource": {
            "title": "Root Type for TimeOffRequestDetailResource",
            "description": "",
            "type": "object",
            "properties": {
                "timeOffRequestDetailId": {
                    "format": "int32",
                    "description": "The system generated time off request's internal Id",
                    "type": "integer"
                },
                "timeOffTypeId": {
                    "format": "int32",
                    "description": "The time off type's internal IdThe time off type's internal Id",
                    "type": "integer"
                },
                "date": {
                    "format": "date-time",
                    "description": "The time off request detail's effective date",
                    "type": "string"
                },
                "hours": {
                    "format": "double",
                    "description": "The hours requested for the time off request detail",
                    "type": "number"
                },
                "payCategoryId": {
                    "format": "int32",
                    "description": "The pay category's internal Id with which category pay adjustments should be processed. If not provided, then the default pay category is selected for paid time off.",
                    "type": "integer"
                }
            },
            "example": {
                "timeOffRequestDetailId": 0,
                "timeOffTypeId": 0,
                "date": "0001-01-01T00:00:00",
                "hours": 0,
                "payCategoryId": 0
            }
        },
        "AdjustmentCategoryCollectionResource": {
            "title": "Root Type for AdjustmentCategoryCollectionResource",
            "description": "",
            "type": "object",
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AdjustmentCategoryResource"
                    }
                }
            },
            "example": {
                "entities": [
                ]
            }
        },
        "AdjustmentCategoryResource": {
            "title": "Root Type for AdjustmentCategoryResource",
            "description": "",
            "type": "object",
            "properties": {
                "adjustmentCategoryId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "adjustmentCategoryType": {
                    "type": "string"
                },
                "isTrackedInAccruals": {
                    "type": "boolean"
                },
                "availableInSingleUserMode": {
                    "type": "boolean"
                },
                "allowZeroValues": {
                    "type": "boolean"
                },
                "accumulatorHoursCode": {
                    "type": "string"
                },
                "sequenceNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "errorThreshold": {
                    "format": "int32",
                    "type": "integer"
                },
                "warningThreshold": {
                    "format": "int32",
                    "type": "integer"
                },
                "defaultHours": {
                    "format": "double",
                    "type": "number"
                },
                "alternateAccrualAdjustmentCategoryId": {
                    "type": "string"
                },
                "alternateAccrualAdjustmentCategoryName": {
                    "type": "string"
                },
                "isTrackedAsWholeDays": {
                    "type": "boolean"
                },
                "trackApprovedAccrualUsage": {
                    "type": "boolean"
                },
                "subtractApprovedTimeOffFromWeeklyMinMax": {
                    "type": "boolean"
                },
                "useAccumulatorForPay": {
                    "type": "boolean"
                },
                "payAccumulatorId": {
                    "type": "string"
                },
                "payAccumulatorName": {
                    "type": "string"
                },
                "includeInWorkedHoursAccrual": {
                    "type": "boolean"
                },
                "blockScheduleFlag": {
                    "type": "boolean"
                },
                "enforceScheduleAndPreferredAvailabilty": {
                    "type": "boolean"
                },
                "validateGeneralAvailability": {
                    "type": "boolean"
                },
                "summaryCode1": {
                    "type": "string"
                },
                "summaryCode2": {
                    "type": "string"
                }
            },
            "example": {
                "adjustmentCategoryId": "sample string 0",
                "name": "sample string 1",
                "adjustmentCategoryType": "Amount",
                "isTrackedInAccruals": true,
                "availableInSingleUserMode": true,
                "allowZeroValues": true,
                "accumulatorHoursCode": "None",
                "sequenceNumber": 5,
                "errorThreshold": 0,
                "warningThreshold": 0,
                "defaultHours": 0,
                "alternateAccrualAdjustmentCategoryId": "sample string 6",
                "alternateAccrualAdjustmentCategoryName": "sample string 7",
                "isTrackedAsWholeDays": true,
                "trackApprovedAccrualUsage": true,
                "subtractApprovedTimeOffFromWeeklyMinMax": true,
                "useAccumulatorForPay": true,
                "payAccumulatorId": "sample string 12",
                "payAccumulatorName": "sample string 13",
                "includeInWorkedHoursAccrual": true,
                "blockScheduleFlag": true,
                "enforceScheduleAndPreferredAvailabilty": true,
                "validateGeneralAvailability": true,
                "summaryCode1": "sample string 18",
                "summaryCode2": "sample string 19"
            }
        },
        "ContactInfoResource": {
            "title": "Root Type for ContactInfoResource",
            "description": "",
            "type": "object",
            "properties": {
                "contactInformationId": {
                    "format": "int32",
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                }
            },
            "example": {
                "contactInformationId": 0,
                "email": "sample string 10"
            }
        },
        "NameResource": {
            "title": "Name",
            "description": "Defines a Name",
            "type": "object",
            "properties": {
                "loginName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "EmployeeScheduledShiftCollectionResource": {
            "title": "Root Type for EmployeeScheduledShiftCollectionResource",
            "description": "",
            "type": "object",
            "properties": {
                "employeeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "businessDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledShift"
                    }
                }
            },
            "example": {
                "employeeId": 0,
                "businessDate": "0001-01-01T00:00:00",
                "entities": [
                ]
            }
        },
        "PayPeriodConfigurationResource": {
            "title": "Root Type for PayPeriodConfigurationResource",
            "description": "",
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "adjustPayForDaylightaSavingsTime": {
                    "type": "boolean"
                },
                "costAllocation": {
                    "type": "string"
                },
                "effectiveTimestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "endTimestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "laborStartTimeMinutesFromMidnight": {
                    "format": "int32",
                    "type": "integer"
                },
                "dayCut": {
                    "type": "boolean"
                },
                "payPeriodAssignmentType": {
                    "type": "string"
                },
                "startOfLaborWeek": {
                    "type": "string"
                }
            },
            "example": {
                "id": 0,
                "adjustPayForDaylightaSavingsTime": true,
                "costAllocation": "OpenHours",
                "effectiveTimestamp": "0001-01-01T00:00:00",
                "endTimestamp": "0001-01-01T00:00:00",
                "laborStartTimeMinutesFromMidnight": 2,
                "dayCut": true,
                "payPeriodAssignmentType": "Weekly",
                "startOfLaborWeek": "Sunday"
            }
        },
        "SwapShiftResource": {
            "title": "Root Type for SwapShiftResource",
            "description": "",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Shift type status taking one of the values: Losing, Gaining or Normal",
                    "type": "string"
                },
                "shiftId": {
                    "description": "Internal shift ID",
                    "type": "string"
                },
                "shiftStart": {
                    "format": "date-time",
                    "description": "Shift start time",
                    "type": "string"
                },
                "shiftEnd": {
                    "format": "date-time",
                    "description": "Shift end time",
                    "type": "string"
                },
                "jobNames": {
                    "description": "Job Names separated by / if the shift is job transfers",
                    "type": "string"
                },
                "jobColor": {
                    "description": "Job Color code",
                    "type": "string"
                },
                "fixedShift": {
                    "description": "Is Fixed shift",
                    "type": "boolean"
                }
            },
            "example": {
                "type": "n",
                "shiftId": "sample string 0",
                "shiftStart": "0001-01-01T00:00:00",
                "shiftEnd": "0001-01-01T00:00:00",
                "jobNames": "sample string 1",
                "jobColor": "sample string 2",
                "fixedShift": true
            }
        },
        "Error": {
            "title": "Root Type for ErrorResponse",
            "description": "",
            "type": "object",
            "properties": {
                "userMessage": {
                    "description": "Pass this message on to the app user if needed.",
                    "type": "string"
                },
                "errorCode": {
                    "description": "unique.errorCode.perMessage",
                    "type": "string"
                },
                "moreInfo": {
                    "description": "http://example.com/app/api/errors/unique.errorCode.perMessage",
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "description": "ISO formatted datetime e.g. 2012-07-25T12:00:00Z",
                    "type": "string"
                },
                "devMessage": {
                    "description": "Verbose, plain language description of the problem for the app developer with hints about how to fix it."
                }
            },
            "example": {
                "userMessage": "Requested Shift Does Not Belong To Employee",
                "errorCode": "SwapShiftErrorCodes.RequestedShiftDoesNotBelongToEmployee",
                "devMessage": "No error arguments available. "
            }
        },
        "EmployeeTimeOffCollectionResource": {
            "description": "",
            "type": "object",
            "properties": {
                "entities": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmployeeTimeOffResource"
                    }
                }
            }
        }
    }
}